
TestTouch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000f5c  00000ff0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f5c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800114  00800114  00001004  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001004  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001034  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00001074  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002d27  00000000  00000000  0000120c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b73  00000000  00000000  00003f33  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f4d  00000000  00000000  00004aa6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007f8  00000000  00000000  000059f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000071f  00000000  00000000  000061ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003216  00000000  00000000  0000690b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00009b21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
   2:	00 00       	nop
   4:	50 c1       	rjmp	.+672    	; 0x2a6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c1       	rjmp	.+668    	; 0x2a6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c1       	rjmp	.+664    	; 0x2a6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c1       	rjmp	.+660    	; 0x2a6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c1       	rjmp	.+656    	; 0x2a6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c1       	rjmp	.+652    	; 0x2a6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c1       	rjmp	.+648    	; 0x2a6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c1       	rjmp	.+644    	; 0x2a6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c1       	rjmp	.+640    	; 0x2a6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c1       	rjmp	.+636    	; 0x2a6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c1       	rjmp	.+632    	; 0x2a6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c1       	rjmp	.+628    	; 0x2a6 <__bad_interrupt>
  32:	00 00       	nop
  34:	38 c1       	rjmp	.+624    	; 0x2a6 <__bad_interrupt>
  36:	00 00       	nop
  38:	36 c1       	rjmp	.+620    	; 0x2a6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c1       	rjmp	.+616    	; 0x2a6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c1       	rjmp	.+612    	; 0x2a6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c1       	rjmp	.+608    	; 0x2a6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c1       	rjmp	.+604    	; 0x2a6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2c c1       	rjmp	.+600    	; 0x2a6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2a c1       	rjmp	.+596    	; 0x2a6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c1       	rjmp	.+592    	; 0x2a6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c1       	rjmp	.+588    	; 0x2a6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c1       	rjmp	.+584    	; 0x2a6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c1       	rjmp	.+580    	; 0x2a6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c1       	rjmp	.+576    	; 0x2a6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c1       	rjmp	.+572    	; 0x2a6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c1       	rjmp	.+568    	; 0x2a6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1a c1       	rjmp	.+564    	; 0x2a6 <__bad_interrupt>
  72:	00 00       	nop
  74:	18 c1       	rjmp	.+560    	; 0x2a6 <__bad_interrupt>
  76:	00 00       	nop
  78:	16 c1       	rjmp	.+556    	; 0x2a6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	14 c1       	rjmp	.+552    	; 0x2a6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	12 c1       	rjmp	.+548    	; 0x2a6 <__bad_interrupt>
  82:	00 00       	nop
  84:	10 c1       	rjmp	.+544    	; 0x2a6 <__bad_interrupt>
  86:	00 00       	nop
  88:	0e c1       	rjmp	.+540    	; 0x2a6 <__bad_interrupt>
	...

0000008c <FONT_CHARS>:
  8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  9c:	7f 14 7f 14 12 2a 7f 2a 24 62 64 08 13 23 50 22     .....*.*$bd..#P"
  ac:	55 49 36 00 05 03 00 00 00 41 22 1c 00 00 1c 22     UI6......A"...."
  bc:	41 00 08 2a 1c 2a 08 08 08 3e 08 08 00 00 30 50     A..*.*...>....0P
  cc:	00 08 08 08 08 08 00 60 60 00 00 02 04 08 10 20     .......``...... 
  dc:	3e 45 49 51 3e 00 40 7f 42 00 46 49 51 61 42 31     >EIQ>.@.B.FIQaB1
  ec:	4b 45 41 21 10 7f 12 14 18 39 45 45 45 27 30 49     KEA!.....9EEE'0I
  fc:	49 4a 3c 03 05 09 71 01 36 49 49 49 36 1e 29 49     IJ<...q.6III6.)I
 10c:	49 06 00 36 36 00 00 00 00 36 56 00 41 22 14 08     I..66....6V.A"..
 11c:	00 14 14 14 14 14 00 08 14 22 41 06 09 51 01 02     ........."A..Q..
 12c:	3e 41 79 49 32 7e 11 11 11 7e 36 49 49 49 7f 22     >AyI2~...~6III."
 13c:	41 41 41 3e 1c 22 41 41 7f 41 49 49 49 7f 01 01     AAA>."AA.AIII...
 14c:	09 09 7f 32 51 41 41 3e 7f 08 08 08 7f 00 41 7f     ...2QAA>......A.
 15c:	41 00 01 3f 41 40 20 41 22 14 08 7f 40 40 40 40     A..?A@ A"...@@@@
 16c:	7f 7f 02 04 02 7f 7f 10 08 04 7f 3e 41 41 41 3e     ...........>AAA>
 17c:	06 09 09 09 7f 5e 21 51 41 3e 46 29 19 09 7f 31     .....^!QA>F)...1
 18c:	49 49 49 46 01 01 7f 01 01 3f 40 40 40 3f 1f 20     IIIF.....?@@@?. 
 19c:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
 1ac:	04 03 43 45 49 51 61 41 41 7f 00 00 20 10 08 04     ..CEIQaAA... ...
 1bc:	02 00 00 7f 41 41 04 02 01 02 04 40 40 40 40 40     ....AA.....@@@@@
 1cc:	00 04 02 01 00 78 54 54 54 20 38 44 44 48 7f 20     .....xTTT 8DDH. 
 1dc:	44 44 44 38 7f 44 44 48 38 18 54 54 54 38 02 01     DDD8.DDH8.TTT8..
 1ec:	09 7e 08 3c 54 54 14 08 78 04 04 08 7f 00 40 7d     .~.<TT..x.....@}
 1fc:	44 00 00 3d 44 40 20 44 28 10 7f 00 00 40 7f 41     D..=D@ D(....@.A
 20c:	00 78 04 18 04 7c 78 04 04 08 7c 38 44 44 44 38     .x...|x...|8DDD8
 21c:	08 14 14 14 7c 7c 18 14 14 08 08 04 04 08 7c 20     ....||........| 
 22c:	54 54 54 48 20 40 44 3f 04 7c 20 40 40 3c 1c 20     TTTH @D?.| @@<. 
 23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 3c 50 50     @ .<@0@<D(.(D<PP
 24c:	50 0c 44 4c 54 64 44 00 41 36 08 00 00 00 7f 00     P.DLTdD.A6......
 25c:	00 00 08 36 41 00 08 1c 2a 08 08 08 08 2a 1c 08     ...6A...*....*..

0000026c <__ctors_end>:
 26c:	11 24       	eor	r1, r1
 26e:	1f be       	out	0x3f, r1	; 63
 270:	cf ef       	ldi	r28, 0xFF	; 255
 272:	d0 e4       	ldi	r29, 0x40	; 64
 274:	de bf       	out	0x3e, r29	; 62
 276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
 278:	11 e0       	ldi	r17, 0x01	; 1
 27a:	a0 e0       	ldi	r26, 0x00	; 0
 27c:	b1 e0       	ldi	r27, 0x01	; 1
 27e:	ec e5       	ldi	r30, 0x5C	; 92
 280:	ff e0       	ldi	r31, 0x0F	; 15
 282:	00 e0       	ldi	r16, 0x00	; 0
 284:	0b bf       	out	0x3b, r16	; 59
 286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
 288:	07 90       	elpm	r0, Z+
 28a:	0d 92       	st	X+, r0
 28c:	a4 31       	cpi	r26, 0x14	; 20
 28e:	b1 07       	cpc	r27, r17
 290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
 292:	21 e0       	ldi	r18, 0x01	; 1
 294:	a4 e1       	ldi	r26, 0x14	; 20
 296:	b1 e0       	ldi	r27, 0x01	; 1
 298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
 29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
 29c:	a8 31       	cpi	r26, 0x18	; 24
 29e:	b2 07       	cpc	r27, r18
 2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
 2a2:	a5 d3       	rcall	.+1866   	; 0x9ee <main>
 2a4:	59 c6       	rjmp	.+3250   	; 0xf58 <_exit>

000002a6 <__bad_interrupt>:
 2a6:	ac ce       	rjmp	.-680    	; 0x0 <__vectors>

000002a8 <SetupPorts>:

	while(ADCSRA & (1 << ADSC));

	ADCSRA |= (1<<ADIF);
	return (ADC);
}
 2a8:	8f ef       	ldi	r24, 0xFF	; 255
 2aa:	84 b9       	out	0x04, r24	; 4
 2ac:	17 b8       	out	0x07, r1	; 7
 2ae:	28 9a       	sbi	0x05, 0	; 5
 2b0:	08 95       	ret

000002b2 <msDelay>:
 2b2:	18 16       	cp	r1, r24
 2b4:	19 06       	cpc	r1, r25
 2b6:	6c f4       	brge	.+26     	; 0x2d2 <msDelay+0x20>
 2b8:	20 e0       	ldi	r18, 0x00	; 0
 2ba:	30 e0       	ldi	r19, 0x00	; 0
 2bc:	ef e9       	ldi	r30, 0x9F	; 159
 2be:	ff e0       	ldi	r31, 0x0F	; 15
 2c0:	31 97       	sbiw	r30, 0x01	; 1
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <msDelay+0xe>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <msDelay+0x14>
 2c6:	00 00       	nop
 2c8:	2f 5f       	subi	r18, 0xFF	; 255
 2ca:	3f 4f       	sbci	r19, 0xFF	; 255
 2cc:	82 17       	cp	r24, r18
 2ce:	93 07       	cpc	r25, r19
 2d0:	a9 f7       	brne	.-22     	; 0x2bc <msDelay+0xa>
 2d2:	08 95       	ret

000002d4 <intsqrt>:
 2d4:	4f 92       	push	r4
 2d6:	5f 92       	push	r5
 2d8:	6f 92       	push	r6
 2da:	7f 92       	push	r7
 2dc:	8f 92       	push	r8
 2de:	9f 92       	push	r9
 2e0:	af 92       	push	r10
 2e2:	bf 92       	push	r11
 2e4:	cf 92       	push	r12
 2e6:	df 92       	push	r13
 2e8:	ef 92       	push	r14
 2ea:	ff 92       	push	r15
 2ec:	2b 01       	movw	r4, r22
 2ee:	3c 01       	movw	r6, r24
 2f0:	67 2b       	or	r22, r23
 2f2:	68 2b       	or	r22, r24
 2f4:	69 2b       	or	r22, r25
 2f6:	49 f1       	breq	.+82     	; 0x34a <intsqrt+0x76>
 2f8:	e0 e1       	ldi	r30, 0x10	; 16
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	c1 2c       	mov	r12, r1
 2fe:	d1 2c       	mov	r13, r1
 300:	76 01       	movw	r14, r12
 302:	81 2c       	mov	r8, r1
 304:	91 2c       	mov	r9, r1
 306:	54 01       	movw	r10, r8
 308:	68 94       	set
 30a:	97 f8       	bld	r9, 7
 30c:	c8 28       	or	r12, r8
 30e:	d9 28       	or	r13, r9
 310:	ea 28       	or	r14, r10
 312:	fb 28       	or	r15, r11
 314:	a7 01       	movw	r20, r14
 316:	96 01       	movw	r18, r12
 318:	c7 01       	movw	r24, r14
 31a:	b6 01       	movw	r22, r12
 31c:	c2 d5       	rcall	.+2948   	; 0xea2 <__mulsi3>
 31e:	46 16       	cp	r4, r22
 320:	57 06       	cpc	r5, r23
 322:	68 06       	cpc	r6, r24
 324:	79 06       	cpc	r7, r25
 326:	50 f4       	brcc	.+20     	; 0x33c <intsqrt+0x68>
 328:	d5 01       	movw	r26, r10
 32a:	c4 01       	movw	r24, r8
 32c:	80 95       	com	r24
 32e:	90 95       	com	r25
 330:	a0 95       	com	r26
 332:	b0 95       	com	r27
 334:	c8 22       	and	r12, r24
 336:	d9 22       	and	r13, r25
 338:	ea 22       	and	r14, r26
 33a:	fb 22       	and	r15, r27
 33c:	b6 94       	lsr	r11
 33e:	a7 94       	ror	r10
 340:	97 94       	ror	r9
 342:	87 94       	ror	r8
 344:	31 97       	sbiw	r30, 0x01	; 1
 346:	11 f7       	brne	.-60     	; 0x30c <intsqrt+0x38>
 348:	03 c0       	rjmp	.+6      	; 0x350 <intsqrt+0x7c>
 34a:	c1 2c       	mov	r12, r1
 34c:	d1 2c       	mov	r13, r1
 34e:	76 01       	movw	r14, r12
 350:	c7 01       	movw	r24, r14
 352:	b6 01       	movw	r22, r12
 354:	ff 90       	pop	r15
 356:	ef 90       	pop	r14
 358:	df 90       	pop	r13
 35a:	cf 90       	pop	r12
 35c:	bf 90       	pop	r11
 35e:	af 90       	pop	r10
 360:	9f 90       	pop	r9
 362:	8f 90       	pop	r8
 364:	7f 90       	pop	r7
 366:	6f 90       	pop	r6
 368:	5f 90       	pop	r5
 36a:	4f 90       	pop	r4
 36c:	08 95       	ret

0000036e <OpenSPI>:
 36e:	80 e5       	ldi	r24, 0x50	; 80
 370:	8c bd       	out	0x2c, r24	; 44
 372:	8d b5       	in	r24, 0x2d	; 45
 374:	81 60       	ori	r24, 0x01	; 1
 376:	8d bd       	out	0x2d, r24	; 45
 378:	08 95       	ret

0000037a <Xfer>:
 37a:	8e bd       	out	0x2e, r24	; 46
 37c:	0d b4       	in	r0, 0x2d	; 45
 37e:	07 fe       	sbrs	r0, 7
 380:	fd cf       	rjmp	.-6      	; 0x37c <Xfer+0x2>
 382:	8e b5       	in	r24, 0x2e	; 46
 384:	08 95       	ret

00000386 <WriteCmd>:
 386:	29 98       	cbi	0x05, 1	; 5
 388:	f8 df       	rcall	.-16     	; 0x37a <Xfer>
 38a:	29 9a       	sbi	0x05, 1	; 5
 38c:	08 95       	ret

0000038e <WriteWord>:
 38e:	cf 93       	push	r28
 390:	c8 2f       	mov	r28, r24
 392:	89 2f       	mov	r24, r25
 394:	f2 df       	rcall	.-28     	; 0x37a <Xfer>
 396:	8c 2f       	mov	r24, r28
 398:	f0 df       	rcall	.-32     	; 0x37a <Xfer>
 39a:	cf 91       	pop	r28
 39c:	08 95       	ret

0000039e <Write565>:
 39e:	0f 93       	push	r16
 3a0:	1f 93       	push	r17
 3a2:	cf 93       	push	r28
 3a4:	df 93       	push	r29
 3a6:	08 2f       	mov	r16, r24
 3a8:	19 2f       	mov	r17, r25
 3aa:	eb 01       	movw	r28, r22
 3ac:	8c e2       	ldi	r24, 0x2C	; 44
 3ae:	eb df       	rcall	.-42     	; 0x386 <WriteCmd>
 3b0:	20 97       	sbiw	r28, 0x00	; 0
 3b2:	59 f0       	breq	.+22     	; 0x3ca <Write565+0x2c>
 3b4:	91 2f       	mov	r25, r17
 3b6:	9e bd       	out	0x2e, r25	; 46
 3b8:	0d b4       	in	r0, 0x2d	; 45
 3ba:	07 fe       	sbrs	r0, 7
 3bc:	fd cf       	rjmp	.-6      	; 0x3b8 <Write565+0x1a>
 3be:	0e bd       	out	0x2e, r16	; 46
 3c0:	0d b4       	in	r0, 0x2d	; 45
 3c2:	07 fe       	sbrs	r0, 7
 3c4:	fd cf       	rjmp	.-6      	; 0x3c0 <Write565+0x22>
 3c6:	21 97       	sbiw	r28, 0x01	; 1
 3c8:	b1 f7       	brne	.-20     	; 0x3b6 <Write565+0x18>
 3ca:	df 91       	pop	r29
 3cc:	cf 91       	pop	r28
 3ce:	1f 91       	pop	r17
 3d0:	0f 91       	pop	r16
 3d2:	08 95       	ret

000003d4 <HardwareReset>:
 3d4:	28 98       	cbi	0x05, 0	; 5
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	6b df       	rcall	.-298    	; 0x2b2 <msDelay>
 3dc:	28 9a       	sbi	0x05, 0	; 5
 3de:	86 e9       	ldi	r24, 0x96	; 150
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	67 cf       	rjmp	.-306    	; 0x2b2 <msDelay>
 3e4:	08 95       	ret

000003e6 <InitDisplay>:
 3e6:	f6 df       	rcall	.-20     	; 0x3d4 <HardwareReset>
 3e8:	81 e1       	ldi	r24, 0x11	; 17
 3ea:	cd df       	rcall	.-102    	; 0x386 <WriteCmd>
 3ec:	86 e9       	ldi	r24, 0x96	; 150
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	60 df       	rcall	.-320    	; 0x2b2 <msDelay>
 3f2:	8a e3       	ldi	r24, 0x3A	; 58
 3f4:	c8 df       	rcall	.-112    	; 0x386 <WriteCmd>
 3f6:	85 e0       	ldi	r24, 0x05	; 5
 3f8:	c0 df       	rcall	.-128    	; 0x37a <Xfer>
 3fa:	89 e2       	ldi	r24, 0x29	; 41
 3fc:	c4 cf       	rjmp	.-120    	; 0x386 <WriteCmd>
 3fe:	08 95       	ret

00000400 <SetAddrWindow>:
 400:	cf 92       	push	r12
 402:	df 92       	push	r13
 404:	ef 92       	push	r14
 406:	ff 92       	push	r15
 408:	0f 93       	push	r16
 40a:	1f 93       	push	r17
 40c:	cf 93       	push	r28
 40e:	df 93       	push	r29
 410:	6c 01       	movw	r12, r24
 412:	8b 01       	movw	r16, r22
 414:	7a 01       	movw	r14, r20
 416:	e9 01       	movw	r28, r18
 418:	8a e2       	ldi	r24, 0x2A	; 42
 41a:	b5 df       	rcall	.-150    	; 0x386 <WriteCmd>
 41c:	c6 01       	movw	r24, r12
 41e:	b7 df       	rcall	.-146    	; 0x38e <WriteWord>
 420:	c7 01       	movw	r24, r14
 422:	b5 df       	rcall	.-150    	; 0x38e <WriteWord>
 424:	8b e2       	ldi	r24, 0x2B	; 43
 426:	af df       	rcall	.-162    	; 0x386 <WriteCmd>
 428:	c8 01       	movw	r24, r16
 42a:	b1 df       	rcall	.-158    	; 0x38e <WriteWord>
 42c:	ce 01       	movw	r24, r28
 42e:	af df       	rcall	.-162    	; 0x38e <WriteWord>
 430:	df 91       	pop	r29
 432:	cf 91       	pop	r28
 434:	1f 91       	pop	r17
 436:	0f 91       	pop	r16
 438:	ff 90       	pop	r15
 43a:	ef 90       	pop	r14
 43c:	df 90       	pop	r13
 43e:	cf 90       	pop	r12
 440:	08 95       	ret

00000442 <ClearScreen>:
 442:	2f e3       	ldi	r18, 0x3F	; 63
 444:	31 e0       	ldi	r19, 0x01	; 1
 446:	4f ee       	ldi	r20, 0xEF	; 239
 448:	50 e0       	ldi	r21, 0x00	; 0
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	70 e0       	ldi	r23, 0x00	; 0
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	d6 df       	rcall	.-84     	; 0x400 <SetAddrWindow>
 454:	8c e2       	ldi	r24, 0x2C	; 44
 456:	97 df       	rcall	.-210    	; 0x386 <WriteCmd>
 458:	80 e0       	ldi	r24, 0x00	; 0
 45a:	98 e5       	ldi	r25, 0x58	; 88
 45c:	a2 e0       	ldi	r26, 0x02	; 2
 45e:	b0 e0       	ldi	r27, 0x00	; 0
 460:	1e bc       	out	0x2e, r1	; 46
 462:	0d b4       	in	r0, 0x2d	; 45
 464:	07 fe       	sbrs	r0, 7
 466:	fd cf       	rjmp	.-6      	; 0x462 <ClearScreen+0x20>
 468:	01 97       	sbiw	r24, 0x01	; 1
 46a:	a1 09       	sbc	r26, r1
 46c:	b1 09       	sbc	r27, r1
 46e:	c1 f7       	brne	.-16     	; 0x460 <ClearScreen+0x1e>
 470:	08 95       	ret

00000472 <VLine>:
 472:	ef 92       	push	r14
 474:	ff 92       	push	r15
 476:	0f 93       	push	r16
 478:	1f 93       	push	r17
 47a:	cf 93       	push	r28
 47c:	df 93       	push	r29
 47e:	8b 01       	movw	r16, r22
 480:	ea 01       	movw	r28, r20
 482:	79 01       	movw	r14, r18
 484:	9a 01       	movw	r18, r20
 486:	ac 01       	movw	r20, r24
 488:	bb df       	rcall	.-138    	; 0x400 <SetAddrWindow>
 48a:	be 01       	movw	r22, r28
 48c:	60 1b       	sub	r22, r16
 48e:	71 0b       	sbc	r23, r17
 490:	6f 5f       	subi	r22, 0xFF	; 255
 492:	7f 4f       	sbci	r23, 0xFF	; 255
 494:	c7 01       	movw	r24, r14
 496:	83 df       	rcall	.-250    	; 0x39e <Write565>
 498:	df 91       	pop	r29
 49a:	cf 91       	pop	r28
 49c:	1f 91       	pop	r17
 49e:	0f 91       	pop	r16
 4a0:	ff 90       	pop	r15
 4a2:	ef 90       	pop	r14
 4a4:	08 95       	ret

000004a6 <FillCircle>:
 4a6:	3f 92       	push	r3
 4a8:	4f 92       	push	r4
 4aa:	5f 92       	push	r5
 4ac:	6f 92       	push	r6
 4ae:	7f 92       	push	r7
 4b0:	8f 92       	push	r8
 4b2:	9f 92       	push	r9
 4b4:	af 92       	push	r10
 4b6:	bf 92       	push	r11
 4b8:	cf 92       	push	r12
 4ba:	df 92       	push	r13
 4bc:	ef 92       	push	r14
 4be:	ff 92       	push	r15
 4c0:	0f 93       	push	r16
 4c2:	1f 93       	push	r17
 4c4:	cf 93       	push	r28
 4c6:	df 93       	push	r29
 4c8:	44 9f       	mul	r20, r20
 4ca:	20 01       	movw	r4, r0
 4cc:	45 9f       	mul	r20, r21
 4ce:	50 0c       	add	r5, r0
 4d0:	50 0c       	add	r5, r0
 4d2:	11 24       	eor	r1, r1
 4d4:	05 2c       	mov	r0, r5
 4d6:	00 0c       	add	r0, r0
 4d8:	66 08       	sbc	r6, r6
 4da:	77 08       	sbc	r7, r7
 4dc:	55 23       	and	r21, r21
 4de:	8c f1       	brlt	.+98     	; 0x542 <FillCircle+0x9c>
 4e0:	49 01       	movw	r8, r18
 4e2:	5a 01       	movw	r10, r20
 4e4:	36 2e       	mov	r3, r22
 4e6:	6c 01       	movw	r12, r24
 4e8:	c0 e0       	ldi	r28, 0x00	; 0
 4ea:	d0 e0       	ldi	r29, 0x00	; 0
 4ec:	cc 9f       	mul	r28, r28
 4ee:	c0 01       	movw	r24, r0
 4f0:	cd 9f       	mul	r28, r29
 4f2:	90 0d       	add	r25, r0
 4f4:	90 0d       	add	r25, r0
 4f6:	11 24       	eor	r1, r1
 4f8:	09 2e       	mov	r0, r25
 4fa:	00 0c       	add	r0, r0
 4fc:	aa 0b       	sbc	r26, r26
 4fe:	bb 0b       	sbc	r27, r27
 500:	a3 01       	movw	r20, r6
 502:	92 01       	movw	r18, r4
 504:	28 1b       	sub	r18, r24
 506:	39 0b       	sbc	r19, r25
 508:	4a 0b       	sbc	r20, r26
 50a:	5b 0b       	sbc	r21, r27
 50c:	ca 01       	movw	r24, r20
 50e:	b9 01       	movw	r22, r18
 510:	e1 de       	rcall	.-574    	; 0x2d4 <intsqrt>
 512:	e6 2e       	mov	r14, r22
 514:	e3 0c       	add	r14, r3
 516:	f1 2c       	mov	r15, r1
 518:	03 2d       	mov	r16, r3
 51a:	06 1b       	sub	r16, r22
 51c:	10 e0       	ldi	r17, 0x00	; 0
 51e:	94 01       	movw	r18, r8
 520:	a7 01       	movw	r20, r14
 522:	b8 01       	movw	r22, r16
 524:	c6 01       	movw	r24, r12
 526:	8c 0f       	add	r24, r28
 528:	9d 1f       	adc	r25, r29
 52a:	a3 df       	rcall	.-186    	; 0x472 <VLine>
 52c:	94 01       	movw	r18, r8
 52e:	a7 01       	movw	r20, r14
 530:	b8 01       	movw	r22, r16
 532:	c6 01       	movw	r24, r12
 534:	8c 1b       	sub	r24, r28
 536:	9d 0b       	sbc	r25, r29
 538:	9c df       	rcall	.-200    	; 0x472 <VLine>
 53a:	21 96       	adiw	r28, 0x01	; 1
 53c:	ac 16       	cp	r10, r28
 53e:	bd 06       	cpc	r11, r29
 540:	ac f6       	brge	.-86     	; 0x4ec <FillCircle+0x46>
 542:	df 91       	pop	r29
 544:	cf 91       	pop	r28
 546:	1f 91       	pop	r17
 548:	0f 91       	pop	r16
 54a:	ff 90       	pop	r15
 54c:	ef 90       	pop	r14
 54e:	df 90       	pop	r13
 550:	cf 90       	pop	r12
 552:	bf 90       	pop	r11
 554:	af 90       	pop	r10
 556:	9f 90       	pop	r9
 558:	8f 90       	pop	r8
 55a:	7f 90       	pop	r7
 55c:	6f 90       	pop	r6
 55e:	5f 90       	pop	r5
 560:	4f 90       	pop	r4
 562:	3f 90       	pop	r3
 564:	08 95       	ret

00000566 <AdvanceCursor>:
 566:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 56a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 56e:	01 96       	adiw	r24, 0x01	; 1
 570:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 574:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 578:	88 97       	sbiw	r24, 0x28	; 40
 57a:	6c f0       	brlt	.+26     	; 0x596 <AdvanceCursor+0x30>
 57c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <curY>
 580:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <curY+0x1>
 584:	01 96       	adiw	r24, 0x01	; 1
 586:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <curY+0x1>
 58a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <curY>
 58e:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <__data_end+0x1>
 592:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
 596:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <curY>
 59a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <curY+0x1>
 59e:	88 97       	sbiw	r24, 0x28	; 40
 5a0:	24 f0       	brlt	.+8      	; 0x5aa <AdvanceCursor+0x44>
 5a2:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <curY+0x1>
 5a6:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <curY>
 5aa:	08 95       	ret

000005ac <SetOrientation>:
 5ac:	cf 93       	push	r28
 5ae:	84 3b       	cpi	r24, 0xB4	; 180
 5b0:	91 05       	cpc	r25, r1
 5b2:	41 f0       	breq	.+16     	; 0x5c4 <SetOrientation+0x18>
 5b4:	8e 30       	cpi	r24, 0x0E	; 14
 5b6:	21 e0       	ldi	r18, 0x01	; 1
 5b8:	92 07       	cpc	r25, r18
 5ba:	31 f0       	breq	.+12     	; 0x5c8 <SetOrientation+0x1c>
 5bc:	8a 35       	cpi	r24, 0x5A	; 90
 5be:	91 05       	cpc	r25, r1
 5c0:	29 f4       	brne	.+10     	; 0x5cc <SetOrientation+0x20>
 5c2:	06 c0       	rjmp	.+12     	; 0x5d0 <SetOrientation+0x24>
 5c4:	c0 ec       	ldi	r28, 0xC0	; 192
 5c6:	05 c0       	rjmp	.+10     	; 0x5d2 <SetOrientation+0x26>
 5c8:	c0 ea       	ldi	r28, 0xA0	; 160
 5ca:	03 c0       	rjmp	.+6      	; 0x5d2 <SetOrientation+0x26>
 5cc:	c0 e0       	ldi	r28, 0x00	; 0
 5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <SetOrientation+0x26>
 5d0:	c0 e6       	ldi	r28, 0x60	; 96
 5d2:	86 e3       	ldi	r24, 0x36	; 54
 5d4:	d8 de       	rcall	.-592    	; 0x386 <WriteCmd>
 5d6:	8c 2f       	mov	r24, r28
 5d8:	d0 de       	rcall	.-608    	; 0x37a <Xfer>
 5da:	cf 91       	pop	r28
 5dc:	08 95       	ret

000005de <PutCh>:
 5de:	8f 92       	push	r8
 5e0:	9f 92       	push	r9
 5e2:	af 92       	push	r10
 5e4:	bf 92       	push	r11
 5e6:	cf 92       	push	r12
 5e8:	df 92       	push	r13
 5ea:	ef 92       	push	r14
 5ec:	ff 92       	push	r15
 5ee:	0f 93       	push	r16
 5f0:	1f 93       	push	r17
 5f2:	cf 93       	push	r28
 5f4:	df 93       	push	r29
 5f6:	e8 2e       	mov	r14, r24
 5f8:	cb 01       	movw	r24, r22
 5fa:	ba 01       	movw	r22, r20
 5fc:	a2 2e       	mov	r10, r18
 5fe:	b3 2e       	mov	r11, r19
 600:	9a 01       	movw	r18, r20
 602:	2a 5f       	subi	r18, 0xFA	; 250
 604:	3f 4f       	sbci	r19, 0xFF	; 255
 606:	ac 01       	movw	r20, r24
 608:	4c 5f       	subi	r20, 0xFC	; 252
 60a:	5f 4f       	sbci	r21, 0xFF	; 255
 60c:	f9 de       	rcall	.-526    	; 0x400 <SetAddrWindow>
 60e:	8c e2       	ldi	r24, 0x2C	; 44
 610:	ba de       	rcall	.-652    	; 0x386 <WriteCmd>
 612:	8e 2d       	mov	r24, r14
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	7c 01       	movw	r14, r24
 618:	ee 0c       	add	r14, r14
 61a:	ff 1c       	adc	r15, r15
 61c:	ee 0c       	add	r14, r14
 61e:	ff 1c       	adc	r15, r15
 620:	e8 0e       	add	r14, r24
 622:	f9 1e       	adc	r15, r25
 624:	0f 2e       	mov	r0, r31
 626:	f7 e0       	ldi	r31, 0x07	; 7
 628:	cf 2e       	mov	r12, r31
 62a:	d1 2c       	mov	r13, r1
 62c:	f0 2d       	mov	r31, r0
 62e:	01 e0       	ldi	r16, 0x01	; 1
 630:	10 e0       	ldi	r17, 0x00	; 0
 632:	80 ea       	ldi	r24, 0xA0	; 160
 634:	e8 1a       	sub	r14, r24
 636:	f1 08       	sbc	r15, r1
 638:	81 2c       	mov	r8, r1
 63a:	91 2c       	mov	r9, r1
 63c:	1b c0       	rjmp	.+54     	; 0x674 <PutCh+0x96>
 63e:	f7 01       	movw	r30, r14
 640:	ec 0f       	add	r30, r28
 642:	fd 1f       	adc	r31, r29
 644:	e4 57       	subi	r30, 0x74	; 116
 646:	ff 4f       	sbci	r31, 0xFF	; 255
 648:	e4 91       	lpm	r30, Z
 64a:	f0 e0       	ldi	r31, 0x00	; 0
 64c:	e0 23       	and	r30, r16
 64e:	f1 23       	and	r31, r17
 650:	ef 2b       	or	r30, r31
 652:	19 f0       	breq	.+6      	; 0x65a <PutCh+0x7c>
 654:	8a 2d       	mov	r24, r10
 656:	9b 2d       	mov	r25, r11
 658:	02 c0       	rjmp	.+4      	; 0x65e <PutCh+0x80>
 65a:	88 2d       	mov	r24, r8
 65c:	99 2d       	mov	r25, r9
 65e:	97 de       	rcall	.-722    	; 0x38e <WriteWord>
 660:	21 96       	adiw	r28, 0x01	; 1
 662:	c5 30       	cpi	r28, 0x05	; 5
 664:	d1 05       	cpc	r29, r1
 666:	59 f7       	brne	.-42     	; 0x63e <PutCh+0x60>
 668:	00 0f       	add	r16, r16
 66a:	11 1f       	adc	r17, r17
 66c:	81 e0       	ldi	r24, 0x01	; 1
 66e:	c8 1a       	sub	r12, r24
 670:	d1 08       	sbc	r13, r1
 672:	19 f0       	breq	.+6      	; 0x67a <PutCh+0x9c>
 674:	c0 e0       	ldi	r28, 0x00	; 0
 676:	d0 e0       	ldi	r29, 0x00	; 0
 678:	e2 cf       	rjmp	.-60     	; 0x63e <PutCh+0x60>
 67a:	df 91       	pop	r29
 67c:	cf 91       	pop	r28
 67e:	1f 91       	pop	r17
 680:	0f 91       	pop	r16
 682:	ff 90       	pop	r15
 684:	ef 90       	pop	r14
 686:	df 90       	pop	r13
 688:	cf 90       	pop	r12
 68a:	bf 90       	pop	r11
 68c:	af 90       	pop	r10
 68e:	9f 90       	pop	r9
 690:	8f 90       	pop	r8
 692:	08 95       	ret

00000694 <WriteChar>:
 694:	9b 01       	movw	r18, r22
 696:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <curY>
 69a:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <curY+0x1>
 69e:	44 0f       	add	r20, r20
 6a0:	55 1f       	adc	r21, r21
 6a2:	44 0f       	add	r20, r20
 6a4:	55 1f       	adc	r21, r21
 6a6:	44 0f       	add	r20, r20
 6a8:	55 1f       	adc	r21, r21
 6aa:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <__data_end>
 6ae:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <__data_end+0x1>
 6b2:	bf 01       	movw	r22, r30
 6b4:	66 0f       	add	r22, r22
 6b6:	77 1f       	adc	r23, r23
 6b8:	e6 0f       	add	r30, r22
 6ba:	f7 1f       	adc	r31, r23
 6bc:	bf 01       	movw	r22, r30
 6be:	66 0f       	add	r22, r22
 6c0:	77 1f       	adc	r23, r23
 6c2:	8d df       	rcall	.-230    	; 0x5de <PutCh>
 6c4:	50 cf       	rjmp	.-352    	; 0x566 <AdvanceCursor>
 6c6:	08 95       	ret

000006c8 <WriteString>:
 6c8:	0f 93       	push	r16
 6ca:	1f 93       	push	r17
 6cc:	cf 93       	push	r28
 6ce:	df 93       	push	r29
 6d0:	ec 01       	movw	r28, r24
 6d2:	88 81       	ld	r24, Y
 6d4:	88 23       	and	r24, r24
 6d6:	39 f0       	breq	.+14     	; 0x6e6 <WriteString+0x1e>
 6d8:	8b 01       	movw	r16, r22
 6da:	21 96       	adiw	r28, 0x01	; 1
 6dc:	b8 01       	movw	r22, r16
 6de:	da df       	rcall	.-76     	; 0x694 <WriteChar>
 6e0:	89 91       	ld	r24, Y+
 6e2:	81 11       	cpse	r24, r1
 6e4:	fb cf       	rjmp	.-10     	; 0x6dc <WriteString+0x14>
 6e6:	df 91       	pop	r29
 6e8:	cf 91       	pop	r28
 6ea:	1f 91       	pop	r17
 6ec:	0f 91       	pop	r16
 6ee:	08 95       	ret

000006f0 <WriteInt>:
 6f0:	cf 93       	push	r28
 6f2:	df 93       	push	r29
 6f4:	cd b7       	in	r28, 0x3d	; 61
 6f6:	de b7       	in	r29, 0x3e	; 62
 6f8:	28 97       	sbiw	r28, 0x08	; 8
 6fa:	0f b6       	in	r0, 0x3f	; 63
 6fc:	f8 94       	cli
 6fe:	de bf       	out	0x3e, r29	; 62
 700:	0f be       	out	0x3f, r0	; 63
 702:	cd bf       	out	0x3d, r28	; 61
 704:	4a e0       	ldi	r20, 0x0A	; 10
 706:	be 01       	movw	r22, r28
 708:	6f 5f       	subi	r22, 0xFF	; 255
 70a:	7f 4f       	sbci	r23, 0xFF	; 255
 70c:	f2 d3       	rcall	.+2020   	; 0xef2 <__itoa_ncheck>
 70e:	6f ef       	ldi	r22, 0xFF	; 255
 710:	7f ef       	ldi	r23, 0xFF	; 255
 712:	ce 01       	movw	r24, r28
 714:	01 96       	adiw	r24, 0x01	; 1
 716:	d8 df       	rcall	.-80     	; 0x6c8 <WriteString>
 718:	28 96       	adiw	r28, 0x08	; 8
 71a:	0f b6       	in	r0, 0x3f	; 63
 71c:	f8 94       	cli
 71e:	de bf       	out	0x3e, r29	; 62
 720:	0f be       	out	0x3f, r0	; 63
 722:	cd bf       	out	0x3d, r28	; 61
 724:	df 91       	pop	r29
 726:	cf 91       	pop	r28
 728:	08 95       	ret

0000072a <readTouchX>:

unsigned int readTouchX(void) {

	unsigned int x_val = 0;

	DDRA &= ~((1<<PINA1) | (1<<PINA2)); //Sets X+ and X- to inputs
 72a:	81 b1       	in	r24, 0x01	; 1
 72c:	89 7f       	andi	r24, 0xF9	; 249
 72e:	81 b9       	out	0x01, r24	; 1

	PORTA &= ~((1<<PINA1) | (1<<PINA2)); //Sets X+,X- to ground
 730:	82 b1       	in	r24, 0x02	; 2
 732:	89 7f       	andi	r24, 0xF9	; 249
 734:	82 b9       	out	0x02, r24	; 2
	

	DDRA |= (1<<PINA0) | (1<<PINA3); //Sets Y+ and Y- as outputs
 736:	81 b1       	in	r24, 0x01	; 1
 738:	89 60       	ori	r24, 0x09	; 9
 73a:	81 b9       	out	0x01, r24	; 1

	PORTA &= ~(1<<PINA3); //Set Y- to ground
 73c:	13 98       	cbi	0x02, 3	; 2

	PORTA |= (1<<PINA0); //Sets Y+ high
 73e:	10 9a       	sbi	0x02, 0	; 2



	ADCSRA |= (1<<ADEN)|(1<<ADSC) + 7;
 740:	ea e7       	ldi	r30, 0x7A	; 122
 742:	f0 e0       	ldi	r31, 0x00	; 0
 744:	80 81       	ld	r24, Z
 746:	87 6c       	ori	r24, 0xC7	; 199
 748:	80 83       	st	Z, r24

	ADMUX = (1<<ADLAR)|((1<<REFS0) + 1); //Read X-
 74a:	81 e6       	ldi	r24, 0x61	; 97
 74c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 750:	8f e1       	ldi	r24, 0x1F	; 31
 752:	93 e0       	ldi	r25, 0x03	; 3
 754:	01 97       	sbiw	r24, 0x01	; 1
 756:	f1 f7       	brne	.-4      	; 0x754 <readTouchX+0x2a>
 758:	00 c0       	rjmp	.+0      	; 0x75a <readTouchX+0x30>
 75a:	00 00       	nop

	//WAIT FOR DONE BIT

	_delay_us(200);

	x_val = ADCL; //Read high first
 75c:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	x_val = x_val + (ADCH<<8); //Then read low
 760:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	98 2f       	mov	r25, r24
 768:	88 27       	eor	r24, r24
 76a:	82 0f       	add	r24, r18
 76c:	91 1d       	adc	r25, r1
	
	if(x_val!=0)
 76e:	00 97       	sbiw	r24, 0x00	; 0
 770:	79 f0       	breq	.+30     	; 0x790 <readTouchX+0x66>
	{
		//convert x_val to 0-480 range
		x_val=(x_val-4000)/117;
 772:	9c 01       	movw	r18, r24
 774:	20 5a       	subi	r18, 0xA0	; 160
 776:	3f 40       	sbci	r19, 0x0F	; 15
 778:	a9 e0       	ldi	r26, 0x09	; 9
 77a:	bc e8       	ldi	r27, 0x8C	; 140
 77c:	a1 d3       	rcall	.+1858   	; 0xec0 <__umulhisi3>
 77e:	00 24       	eor	r0, r0
 780:	88 0f       	add	r24, r24
 782:	99 1f       	adc	r25, r25
 784:	00 1c       	adc	r0, r0
 786:	88 0f       	add	r24, r24
 788:	99 1f       	adc	r25, r25
 78a:	00 1c       	adc	r0, r0
 78c:	89 2f       	mov	r24, r25
 78e:	90 2d       	mov	r25, r0
	}
	

	return x_val; //Returns raw X position
}
 790:	08 95       	ret

00000792 <readTouchY>:

unsigned int readTouchY(void) {

	unsigned int y_val=0;

	DDRA &= ~((1<<PINA0) | (1<<PINA3)); //Set Y+ and Y- to inputs
 792:	81 b1       	in	r24, 0x01	; 1
 794:	86 7f       	andi	r24, 0xF6	; 246
 796:	81 b9       	out	0x01, r24	; 1

	PORTA &= ~((1<<PINA0) | (1<<PINA3)); //Set Y+,Y-to ground
 798:	82 b1       	in	r24, 0x02	; 2
 79a:	86 7f       	andi	r24, 0xF6	; 246
 79c:	82 b9       	out	0x02, r24	; 2
	

	DDRA |= ((1<<PINA1) | (1<<PINA2)); //Set X+ and X- to outputs
 79e:	81 b1       	in	r24, 0x01	; 1
 7a0:	86 60       	ori	r24, 0x06	; 6
 7a2:	81 b9       	out	0x01, r24	; 1

	PORTA &= ~(1<<PINA1); // Set X- to Ground
 7a4:	11 98       	cbi	0x02, 1	; 2

	PORTA |= (1<<PINA2);	//Set X+ high
 7a6:	12 9a       	sbi	0x02, 2	; 2
	

	ADCSRA = (1<<ADEN) | (1<<ADSC) + 7;
 7a8:	87 ec       	ldi	r24, 0xC7	; 199
 7aa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>

	ADMUX = (1<<ADLAR) | (1<<REFS0);  //Read Y+
 7ae:	80 e6       	ldi	r24, 0x60	; 96
 7b0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 7b4:	8f e1       	ldi	r24, 0x1F	; 31
 7b6:	93 e0       	ldi	r25, 0x03	; 3
 7b8:	01 97       	sbiw	r24, 0x01	; 1
 7ba:	f1 f7       	brne	.-4      	; 0x7b8 <readTouchY+0x26>
 7bc:	00 c0       	rjmp	.+0      	; 0x7be <readTouchY+0x2c>
 7be:	00 00       	nop
	//and start a conversion
	// while(ADSC != 0){};

	_delay_us(200); //wait on done bit

	y_val = ADCL;	//Read high first
 7c0:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	y_val = y_val + (ADCH<<8); //Then read low
 7c4:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	98 2f       	mov	r25, r24
 7cc:	88 27       	eor	r24, r24
 7ce:	82 0f       	add	r24, r18
 7d0:	91 1d       	adc	r25, r1
	
	if(y_val!=0)
 7d2:	00 97       	sbiw	r24, 0x00	; 0
 7d4:	89 f0       	breq	.+34     	; 0x7f8 <readTouchY+0x66>
	{
		//convert y_val to 0-320 range
		y_val=(y_val-8000)/150;
 7d6:	80 54       	subi	r24, 0x40	; 64
 7d8:	9f 41       	sbci	r25, 0x1F	; 31
 7da:	9c 01       	movw	r18, r24
 7dc:	36 95       	lsr	r19
 7de:	27 95       	ror	r18
 7e0:	a5 e7       	ldi	r26, 0x75	; 117
 7e2:	ba ed       	ldi	r27, 0xDA	; 218
 7e4:	6d d3       	rcall	.+1754   	; 0xec0 <__umulhisi3>
 7e6:	00 24       	eor	r0, r0
 7e8:	88 0f       	add	r24, r24
 7ea:	99 1f       	adc	r25, r25
 7ec:	00 1c       	adc	r0, r0
 7ee:	88 0f       	add	r24, r24
 7f0:	99 1f       	adc	r25, r25
 7f2:	00 1c       	adc	r0, r0
 7f4:	89 2f       	mov	r24, r25
 7f6:	90 2d       	mov	r25, r0

	}
	

	return y_val; //Return raw Y position
}
 7f8:	08 95       	ret

000007fa <pressureX>:
// x- = PA1
// x+ = PA2
// y- = PA3


uint16_t pressureX(void) {
 7fa:	af 92       	push	r10
 7fc:	bf 92       	push	r11
 7fe:	cf 92       	push	r12
 800:	df 92       	push	r13
 802:	ef 92       	push	r14
 804:	ff 92       	push	r15
 806:	1f 93       	push	r17
 808:	cf 93       	push	r28
 80a:	df 93       	push	r29
	// Set X+ output to ground
	DDRA |= (1<<PINA2);
 80c:	0a 9a       	sbi	0x01, 2	; 1
	PORTA &= ~(1<<PINA2);
 80e:	12 98       	cbi	0x02, 2	; 2
	
	// Set Y- output to VCC
	DDRA |= (1<<PINA3);
 810:	0b 9a       	sbi	0x01, 3	; 1
	PORTA |= (1<<PINA3);
 812:	13 9a       	sbi	0x02, 3	; 2
	
	// Set X- and Y+ as inputs and to ground
	DDRA &= ~((1<<PINA0) | (1<<PINA1));
 814:	81 b1       	in	r24, 0x01	; 1
 816:	8c 7f       	andi	r24, 0xFC	; 252
 818:	81 b9       	out	0x01, r24	; 1
	PORTA &= ~((1<<PINA0) | (1<<PINA1));
 81a:	82 b1       	in	r24, 0x02	; 2
 81c:	8c 7f       	andi	r24, 0xFC	; 252
 81e:	82 b9       	out	0x02, r24	; 2
	
	ADMUX = (1<<REFS0) + 1; //Read the value of X-
 820:	4c e7       	ldi	r20, 0x7C	; 124
 822:	50 e0       	ldi	r21, 0x00	; 0
 824:	81 e4       	ldi	r24, 0x41	; 65
 826:	da 01       	movw	r26, r20
 828:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADSC);
 82a:	ea e7       	ldi	r30, 0x7A	; 122
 82c:	f0 e0       	ldi	r31, 0x00	; 0
 82e:	80 81       	ld	r24, Z
 830:	80 64       	ori	r24, 0x40	; 64
 832:	80 83       	st	Z, r24
 834:	cf e1       	ldi	r28, 0x1F	; 31
 836:	d3 e0       	ldi	r29, 0x03	; 3
 838:	21 97       	sbiw	r28, 0x01	; 1
 83a:	f1 f7       	brne	.-4      	; 0x838 <pressureX+0x3e>
 83c:	00 c0       	rjmp	.+0      	; 0x83e <pressureX+0x44>
 83e:	00 00       	nop
	_delay_us(200);
	int z1 = ADCL;	//Read the high
 840:	28 e7       	ldi	r18, 0x78	; 120
 842:	30 e0       	ldi	r19, 0x00	; 0
 844:	d9 01       	movw	r26, r18
 846:	cc 91       	ld	r28, X
 848:	ac 2e       	mov	r10, r28
 84a:	b1 2c       	mov	r11, r1
	z1 = z1 + (ADCH<<8); //Read the low
 84c:	a9 e7       	ldi	r26, 0x79	; 121
 84e:	b0 e0       	ldi	r27, 0x00	; 0
 850:	1c 91       	ld	r17, X
	ADMUX = (1<<REFS0); //Read the value of Y+
 852:	80 e4       	ldi	r24, 0x40	; 64
 854:	ea 01       	movw	r28, r20
 856:	88 83       	st	Y, r24
	ADCSRA |= (1<<ADSC);
 858:	80 81       	ld	r24, Z
 85a:	80 64       	ori	r24, 0x40	; 64
 85c:	80 83       	st	Z, r24
 85e:	ef e1       	ldi	r30, 0x1F	; 31
 860:	f3 e0       	ldi	r31, 0x03	; 3
 862:	31 97       	sbiw	r30, 0x01	; 1
 864:	f1 f7       	brne	.-4      	; 0x862 <pressureX+0x68>
 866:	00 c0       	rjmp	.+0      	; 0x868 <pressureX+0x6e>
 868:	00 00       	nop
	_delay_us(200);
	int z2 = ADCL; //Read the high
 86a:	e9 01       	movw	r28, r18
 86c:	88 81       	ld	r24, Y
	z2 = z2 + (ADCH<<8); //Read the low
 86e:	6c 91       	ld	r22, X

	// now read the x
	float rtouch;
	rtouch = z2;
 870:	70 e0       	ldi	r23, 0x00	; 0
 872:	76 2f       	mov	r23, r22
 874:	66 27       	eor	r22, r22
 876:	68 0f       	add	r22, r24
 878:	71 1d       	adc	r23, r1
 87a:	07 2e       	mov	r0, r23
 87c:	00 0c       	add	r0, r0
 87e:	88 0b       	sbc	r24, r24
 880:	99 0b       	sbc	r25, r25
 882:	20 d2       	rcall	.+1088   	; 0xcc4 <__floatsisf>
 884:	6b 01       	movw	r12, r22
 886:	7c 01       	movw	r14, r24
	rtouch /= z1;
 888:	61 2f       	mov	r22, r17
 88a:	70 e0       	ldi	r23, 0x00	; 0
 88c:	76 2f       	mov	r23, r22
 88e:	66 27       	eor	r22, r22
 890:	e5 01       	movw	r28, r10
 892:	c6 0f       	add	r28, r22
 894:	d7 1f       	adc	r29, r23
 896:	be 01       	movw	r22, r28
 898:	dd 0f       	add	r29, r29
 89a:	88 0b       	sbc	r24, r24
 89c:	99 0b       	sbc	r25, r25
 89e:	12 d2       	rcall	.+1060   	; 0xcc4 <__floatsisf>
 8a0:	9b 01       	movw	r18, r22
 8a2:	ac 01       	movw	r20, r24
 8a4:	c7 01       	movw	r24, r14
 8a6:	b6 01       	movw	r22, r12
 8a8:	77 d1       	rcall	.+750    	; 0xb98 <__divsf3>
	rtouch -= 1;
 8aa:	20 e0       	ldi	r18, 0x00	; 0
 8ac:	30 e0       	ldi	r19, 0x00	; 0
 8ae:	40 e8       	ldi	r20, 0x80	; 128
 8b0:	5f e3       	ldi	r21, 0x3F	; 63
 8b2:	0d d1       	rcall	.+538    	; 0xace <__subsf3>
 8b4:	6b 01       	movw	r12, r22
	//rtouch *= readTouchY();
	rtouch *= readTouchX();
 8b6:	7c 01       	movw	r14, r24
 8b8:	38 df       	rcall	.-400    	; 0x72a <readTouchX>
 8ba:	bc 01       	movw	r22, r24
 8bc:	80 e0       	ldi	r24, 0x00	; 0
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	ff d1       	rcall	.+1022   	; 0xcc0 <__floatunsisf>
 8c2:	a7 01       	movw	r20, r14
 8c4:	96 01       	movw	r18, r12
	rtouch *= 330;
 8c6:	8a d2       	rcall	.+1300   	; 0xddc <__mulsf3>
 8c8:	20 e0       	ldi	r18, 0x00	; 0
 8ca:	30 e0       	ldi	r19, 0x00	; 0
 8cc:	45 ea       	ldi	r20, 0xA5	; 165
	rtouch /= 1024;
	
	return rtouch; //Return the pressure value
 8ce:	53 e4       	ldi	r21, 0x43	; 67
 8d0:	85 d2       	rcall	.+1290   	; 0xddc <__mulsf3>
 8d2:	20 e0       	ldi	r18, 0x00	; 0
 8d4:	30 e0       	ldi	r19, 0x00	; 0
 8d6:	40 e8       	ldi	r20, 0x80	; 128
 8d8:	5a e3       	ldi	r21, 0x3A	; 58
 8da:	80 d2       	rcall	.+1280   	; 0xddc <__mulsf3>
 8dc:	c5 d1       	rcall	.+906    	; 0xc68 <__fixunssfsi>
}
 8de:	cb 01       	movw	r24, r22
 8e0:	df 91       	pop	r29
 8e2:	cf 91       	pop	r28
 8e4:	1f 91       	pop	r17
 8e6:	ff 90       	pop	r15
 8e8:	ef 90       	pop	r14
 8ea:	df 90       	pop	r13
 8ec:	cf 90       	pop	r12
 8ee:	bf 90       	pop	r11
 8f0:	af 90       	pop	r10
 8f2:	08 95       	ret

000008f4 <pressureY>:

uint16_t pressureY(void) {
 8f4:	af 92       	push	r10
 8f6:	bf 92       	push	r11
 8f8:	cf 92       	push	r12
 8fa:	df 92       	push	r13
 8fc:	ef 92       	push	r14
 8fe:	ff 92       	push	r15
 900:	1f 93       	push	r17
 902:	cf 93       	push	r28
 904:	df 93       	push	r29
	// Set X+ output to ground
	DDRA |= (1<<PINA2);
 906:	0a 9a       	sbi	0x01, 2	; 1
	PORTA &= ~(1<<PINA2);
 908:	12 98       	cbi	0x02, 2	; 2
	
	// Set Y- output to VCC
	DDRA |= (1<<PINA3);
 90a:	0b 9a       	sbi	0x01, 3	; 1
	PORTA |= (1<<PINA3);
 90c:	13 9a       	sbi	0x02, 3	; 2
	
	// Set X- and Y+ as inputs and to ground
	DDRA &= ~((1<<PINA0) | (1<<PINA1));
 90e:	81 b1       	in	r24, 0x01	; 1
 910:	8c 7f       	andi	r24, 0xFC	; 252
 912:	81 b9       	out	0x01, r24	; 1
	PORTA &= ~((1<<PINA0) | (1<<PINA1));
 914:	82 b1       	in	r24, 0x02	; 2
 916:	8c 7f       	andi	r24, 0xFC	; 252
 918:	82 b9       	out	0x02, r24	; 2
	
	ADMUX = (1<<REFS0) + 1; //Read the value of X-
 91a:	4c e7       	ldi	r20, 0x7C	; 124
 91c:	50 e0       	ldi	r21, 0x00	; 0
 91e:	81 e4       	ldi	r24, 0x41	; 65
 920:	da 01       	movw	r26, r20
 922:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADSC);
 924:	ea e7       	ldi	r30, 0x7A	; 122
 926:	f0 e0       	ldi	r31, 0x00	; 0
 928:	80 81       	ld	r24, Z
 92a:	80 64       	ori	r24, 0x40	; 64
 92c:	80 83       	st	Z, r24
 92e:	cf e1       	ldi	r28, 0x1F	; 31
 930:	d3 e0       	ldi	r29, 0x03	; 3
 932:	21 97       	sbiw	r28, 0x01	; 1
 934:	f1 f7       	brne	.-4      	; 0x932 <pressureY+0x3e>
 936:	00 c0       	rjmp	.+0      	; 0x938 <pressureY+0x44>
 938:	00 00       	nop
	_delay_us(200);
	int z1 = ADCL;	//Read the high
 93a:	28 e7       	ldi	r18, 0x78	; 120
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	d9 01       	movw	r26, r18
 940:	cc 91       	ld	r28, X
 942:	ac 2e       	mov	r10, r28
 944:	b1 2c       	mov	r11, r1
	z1 = z1 + (ADCH<<8); //Read the low
 946:	a9 e7       	ldi	r26, 0x79	; 121
 948:	b0 e0       	ldi	r27, 0x00	; 0
 94a:	1c 91       	ld	r17, X
	ADMUX = (1<<REFS0); //Read the value of Y+
 94c:	80 e4       	ldi	r24, 0x40	; 64
 94e:	ea 01       	movw	r28, r20
 950:	88 83       	st	Y, r24
	ADCSRA |= (1<<ADSC);
 952:	80 81       	ld	r24, Z
 954:	80 64       	ori	r24, 0x40	; 64
 956:	80 83       	st	Z, r24
 958:	ef e1       	ldi	r30, 0x1F	; 31
 95a:	f3 e0       	ldi	r31, 0x03	; 3
 95c:	31 97       	sbiw	r30, 0x01	; 1
 95e:	f1 f7       	brne	.-4      	; 0x95c <pressureY+0x68>
 960:	00 c0       	rjmp	.+0      	; 0x962 <pressureY+0x6e>
 962:	00 00       	nop
	_delay_us(200);
	int z2 = ADCL; //Read the high
 964:	e9 01       	movw	r28, r18
 966:	88 81       	ld	r24, Y
	z2 = z2 + (ADCH<<8); //Read the low
 968:	6c 91       	ld	r22, X

	// now read the x
	float rtouch;
	rtouch = z2;
 96a:	70 e0       	ldi	r23, 0x00	; 0
 96c:	76 2f       	mov	r23, r22
 96e:	66 27       	eor	r22, r22
 970:	68 0f       	add	r22, r24
 972:	71 1d       	adc	r23, r1
 974:	07 2e       	mov	r0, r23
 976:	00 0c       	add	r0, r0
 978:	88 0b       	sbc	r24, r24
 97a:	99 0b       	sbc	r25, r25
 97c:	a3 d1       	rcall	.+838    	; 0xcc4 <__floatsisf>
 97e:	6b 01       	movw	r12, r22
 980:	7c 01       	movw	r14, r24
	rtouch /= z1;
 982:	61 2f       	mov	r22, r17
 984:	70 e0       	ldi	r23, 0x00	; 0
 986:	76 2f       	mov	r23, r22
 988:	66 27       	eor	r22, r22
 98a:	e5 01       	movw	r28, r10
 98c:	c6 0f       	add	r28, r22
 98e:	d7 1f       	adc	r29, r23
 990:	be 01       	movw	r22, r28
 992:	dd 0f       	add	r29, r29
 994:	88 0b       	sbc	r24, r24
 996:	99 0b       	sbc	r25, r25
 998:	95 d1       	rcall	.+810    	; 0xcc4 <__floatsisf>
 99a:	9b 01       	movw	r18, r22
 99c:	ac 01       	movw	r20, r24
 99e:	c7 01       	movw	r24, r14
 9a0:	b6 01       	movw	r22, r12
 9a2:	fa d0       	rcall	.+500    	; 0xb98 <__divsf3>
	rtouch -= 1;
 9a4:	20 e0       	ldi	r18, 0x00	; 0
 9a6:	30 e0       	ldi	r19, 0x00	; 0
 9a8:	40 e8       	ldi	r20, 0x80	; 128
 9aa:	5f e3       	ldi	r21, 0x3F	; 63
 9ac:	90 d0       	rcall	.+288    	; 0xace <__subsf3>
 9ae:	6b 01       	movw	r12, r22
	//rtouch *= readTouchY();
	rtouch *= readTouchY();
 9b0:	7c 01       	movw	r14, r24
 9b2:	ef de       	rcall	.-546    	; 0x792 <readTouchY>
 9b4:	bc 01       	movw	r22, r24
 9b6:	80 e0       	ldi	r24, 0x00	; 0
 9b8:	90 e0       	ldi	r25, 0x00	; 0
 9ba:	82 d1       	rcall	.+772    	; 0xcc0 <__floatunsisf>
 9bc:	a7 01       	movw	r20, r14
 9be:	96 01       	movw	r18, r12
	rtouch *= 330;
 9c0:	0d d2       	rcall	.+1050   	; 0xddc <__mulsf3>
 9c2:	20 e0       	ldi	r18, 0x00	; 0
 9c4:	30 e0       	ldi	r19, 0x00	; 0
 9c6:	45 ea       	ldi	r20, 0xA5	; 165
	rtouch /= 1024;
	
	return rtouch; //Return the pressure value
 9c8:	53 e4       	ldi	r21, 0x43	; 67
 9ca:	08 d2       	rcall	.+1040   	; 0xddc <__mulsf3>
 9cc:	20 e0       	ldi	r18, 0x00	; 0
 9ce:	30 e0       	ldi	r19, 0x00	; 0
 9d0:	40 e8       	ldi	r20, 0x80	; 128
 9d2:	5a e3       	ldi	r21, 0x3A	; 58
 9d4:	03 d2       	rcall	.+1030   	; 0xddc <__mulsf3>
 9d6:	48 d1       	rcall	.+656    	; 0xc68 <__fixunssfsi>
}
 9d8:	cb 01       	movw	r24, r22
 9da:	df 91       	pop	r29
 9dc:	cf 91       	pop	r28
 9de:	1f 91       	pop	r17
 9e0:	ff 90       	pop	r15
 9e2:	ef 90       	pop	r14
 9e4:	df 90       	pop	r13
 9e6:	cf 90       	pop	r12
 9e8:	bf 90       	pop	r11
 9ea:	af 90       	pop	r10
 9ec:	08 95       	ret

000009ee <main>:

// MAIN PROGRAM
int main()
{
 SetupPorts(); // use PortB for LCD interface
 9ee:	5c dc       	rcall	.-1864   	; 0x2a8 <SetupPorts>
 //FlashLED(1); // indicate program start
 OpenSPI(); // start communication to TFT
 9f0:	be dc       	rcall	.-1668   	; 0x36e <OpenSPI>
 InitDisplay(); // initialize TFT controller
 9f2:	f9 dc       	rcall	.-1550   	; 0x3e6 <InitDisplay>
 9f4:	26 dd       	rcall	.-1460   	; 0x442 <ClearScreen>
 ClearScreen();
 9f6:	8e e0       	ldi	r24, 0x0E	; 14
 SetOrientation(270);
 9f8:	91 e0       	ldi	r25, 0x01	; 1
 9fa:	d8 dd       	rcall	.-1104   	; 0x5ac <SetOrientation>
 9fc:	86 e1       	ldi	r24, 0x16	; 22
 9fe:	90 e0       	ldi	r25, 0x00	; 0

int curX,curY; // current x & y cursor position
void GotoXY (int x,int y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 a00:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 a04:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 a08:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <curY+0x1>
 curY = y;
 a0c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <curY>
 a10:	6f e1       	ldi	r22, 0x1F	; 31
 //LineTest(); // paint background of lines
 //FillEllipse(60,75,100,50,BLACK); // erase an oval in center
 //Ellipse(60,75,100,50,LIME); // outline the oval in green
 char *str = "!dlroW ,olleH"; // text to display
 GotoXY(22,22); // position text cursor
 WriteString(str,MAGENTA); // display text inside oval
 a12:	78 ef       	ldi	r23, 0xF8	; 248
 a14:	80 e0       	ldi	r24, 0x00	; 0
 a16:	91 e0       	ldi	r25, 0x01	; 1
 a18:	57 de       	rcall	.-850    	; 0x6c8 <WriteString>
 a1a:	c1 e0       	ldi	r28, 0x01	; 1
 a1c:	d0 e0       	ldi	r29, 0x00	; 0

int curX,curY; // current x & y cursor position
void GotoXY (int x,int y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 a1e:	68 94       	set
 a20:	aa 24       	eor	r10, r10
 curY = y;
 a22:	a1 f8       	bld	r10, 1
 a24:	b1 2c       	mov	r11, r1
 a26:	68 94       	set
 a28:	cc 24       	eor	r12, r12
 a2a:	c2 f8       	bld	r12, 2
 a2c:	d1 2c       	mov	r13, r1
 a2e:	0f 2e       	mov	r0, r31
 a30:	f5 e0       	ldi	r31, 0x05	; 5
 a32:	ef 2e       	mov	r14, r31
 a34:	f1 2c       	mov	r15, r1
 a36:	f0 2d       	mov	r31, r0
 a38:	e0 de       	rcall	.-576    	; 0x7fa <pressureX>
 //DDRA = 0x00;
 //PORTA = 0xFF;
 
 //ADC_init();
 while(1){
	 press = pressureX();
 a3a:	0a 97       	sbiw	r24, 0x0a	; 10
	 if((press < 10) || (press > 1000)){
 a3c:	8f 3d       	cpi	r24, 0xDF	; 223
 a3e:	93 40       	sbci	r25, 0x03	; 3
 a40:	08 f0       	brcs	.+2      	; 0xa44 <main+0x56>
		 
	 }
	 else{
		 press = pressureX();
 a42:	3b c0       	rjmp	.+118    	; 0xaba <main+0xcc>
 a44:	da de       	rcall	.-588    	; 0x7fa <pressureX>
		 xp = readTouchX(); // ReadADC(2);
 a46:	71 de       	rcall	.-798    	; 0x72a <readTouchX>
 a48:	4c 01       	movw	r8, r24
 a4a:	54 df       	rcall	.-344    	; 0x8f4 <pressureY>
		 //_delay_ms(200);
		 press = pressureY(); 
 a4c:	a2 de       	rcall	.-700    	; 0x792 <readTouchY>
		 yp = readTouchY(); // ReadADC(0);
 a4e:	8c 01       	movw	r16, r24
 a50:	2f e1       	ldi	r18, 0x1F	; 31
 a52:	38 ef       	ldi	r19, 0xF8	; 248
		

		 //xm = ReadADC(1);
		 //ym = ReadADC(3);
		 
		 FillCircle (xp, yp, 10, MAGENTA);
 a54:	4a e0       	ldi	r20, 0x0A	; 10
 a56:	50 e0       	ldi	r21, 0x00	; 0
 a58:	bc 01       	movw	r22, r24
 a5a:	c4 01       	movw	r24, r8
 a5c:	24 dd       	rcall	.-1464   	; 0x4a6 <FillCircle>
 a5e:	d0 93 15 01 	sts	0x0115, r29	; 0x800115 <__data_end+0x1>
 a62:	c0 93 14 01 	sts	0x0114, r28	; 0x800114 <__data_end>

int curX,curY; // current x & y cursor position
void GotoXY (int x,int y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 a66:	d0 93 17 01 	sts	0x0117, r29	; 0x800117 <curY+0x1>
 curY = y;
 a6a:	c0 93 16 01 	sts	0x0116, r28	; 0x800116 <curY>
 a6e:	6f e1       	ldi	r22, 0x1F	; 31
 a70:	78 ef       	ldi	r23, 0xF8	; 248
		 //ym = ReadADC(3);
		 
		 FillCircle (xp, yp, 10, MAGENTA);
		 char *str = "px";
		 GotoXY(1,1);
		 WriteString(str,MAGENTA);
 a72:	8e e0       	ldi	r24, 0x0E	; 14
 a74:	91 e0       	ldi	r25, 0x01	; 1
 a76:	28 de       	rcall	.-944    	; 0x6c8 <WriteString>
 a78:	d0 93 15 01 	sts	0x0115, r29	; 0x800115 <__data_end+0x1>

int curX,curY; // current x & y cursor position
void GotoXY (int x,int y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 a7c:	c0 93 14 01 	sts	0x0114, r28	; 0x800114 <__data_end>
 a80:	b0 92 17 01 	sts	0x0117, r11	; 0x800117 <curY+0x1>
 curY = y;
 a84:	a0 92 16 01 	sts	0x0116, r10	; 0x800116 <curY>
 a88:	c4 01       	movw	r24, r8
 a8a:	32 de       	rcall	.-924    	; 0x6f0 <WriteInt>
		 FillCircle (xp, yp, 10, MAGENTA);
		 char *str = "px";
		 GotoXY(1,1);
		 WriteString(str,MAGENTA);
		 GotoXY(1,2);
		 WriteInt(xp);
 a8c:	d0 93 15 01 	sts	0x0115, r29	; 0x800115 <__data_end+0x1>

int curX,curY; // current x & y cursor position
void GotoXY (int x,int y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 a90:	c0 93 14 01 	sts	0x0114, r28	; 0x800114 <__data_end>
 a94:	d0 92 17 01 	sts	0x0117, r13	; 0x800117 <curY+0x1>
 curY = y;
 a98:	c0 92 16 01 	sts	0x0116, r12	; 0x800116 <curY>
 a9c:	6f e1       	ldi	r22, 0x1F	; 31
 a9e:	78 ef       	ldi	r23, 0xF8	; 248
		 GotoXY(1,2);
		 WriteInt(xp);
		 
		 char *str1 = "py";
		 GotoXY(1,4);
		 WriteString(str1,MAGENTA);
 aa0:	81 e1       	ldi	r24, 0x11	; 17
 aa2:	91 e0       	ldi	r25, 0x01	; 1
 aa4:	11 de       	rcall	.-990    	; 0x6c8 <WriteString>
 aa6:	d0 93 15 01 	sts	0x0115, r29	; 0x800115 <__data_end+0x1>

int curX,curY; // current x & y cursor position
void GotoXY (int x,int y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 aaa:	c0 93 14 01 	sts	0x0114, r28	; 0x800114 <__data_end>
 aae:	f0 92 17 01 	sts	0x0117, r15	; 0x800117 <curY+0x1>
 curY = y;
 ab2:	e0 92 16 01 	sts	0x0116, r14	; 0x800116 <curY>
 ab6:	c8 01       	movw	r24, r16
 ab8:	1b de       	rcall	.-970    	; 0x6f0 <WriteInt>
		 
		 char *str1 = "py";
		 GotoXY(1,4);
		 WriteString(str1,MAGENTA);
		 GotoXY(1,5);
		 WriteInt(yp);
 aba:	8f ef       	ldi	r24, 0xFF	; 255
 abc:	93 ec       	ldi	r25, 0xC3	; 195
 abe:	29 e0       	ldi	r18, 0x09	; 9
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 ac0:	81 50       	subi	r24, 0x01	; 1
 ac2:	90 40       	sbci	r25, 0x00	; 0
 ac4:	20 40       	sbci	r18, 0x00	; 0
 ac6:	e1 f7       	brne	.-8      	; 0xac0 <main+0xd2>
 ac8:	00 c0       	rjmp	.+0      	; 0xaca <main+0xdc>
 aca:	00 00       	nop
 acc:	b5 cf       	rjmp	.-150    	; 0xa38 <main+0x4a>

00000ace <__subsf3>:
 ace:	50 58       	subi	r21, 0x80	; 128

00000ad0 <__addsf3>:
 ad0:	bb 27       	eor	r27, r27
 ad2:	aa 27       	eor	r26, r26
 ad4:	0e d0       	rcall	.+28     	; 0xaf2 <__addsf3x>
 ad6:	48 c1       	rjmp	.+656    	; 0xd68 <__fp_round>
 ad8:	39 d1       	rcall	.+626    	; 0xd4c <__fp_pscA>
 ada:	30 f0       	brcs	.+12     	; 0xae8 <__addsf3+0x18>
 adc:	3e d1       	rcall	.+636    	; 0xd5a <__fp_pscB>
 ade:	20 f0       	brcs	.+8      	; 0xae8 <__addsf3+0x18>
 ae0:	31 f4       	brne	.+12     	; 0xaee <__addsf3+0x1e>
 ae2:	9f 3f       	cpi	r25, 0xFF	; 255
 ae4:	11 f4       	brne	.+4      	; 0xaea <__addsf3+0x1a>
 ae6:	1e f4       	brtc	.+6      	; 0xaee <__addsf3+0x1e>
 ae8:	2e c1       	rjmp	.+604    	; 0xd46 <__fp_nan>
 aea:	0e f4       	brtc	.+2      	; 0xaee <__addsf3+0x1e>
 aec:	e0 95       	com	r30
 aee:	e7 fb       	bst	r30, 7
 af0:	24 c1       	rjmp	.+584    	; 0xd3a <__fp_inf>

00000af2 <__addsf3x>:
 af2:	e9 2f       	mov	r30, r25
 af4:	4a d1       	rcall	.+660    	; 0xd8a <__fp_split3>
 af6:	80 f3       	brcs	.-32     	; 0xad8 <__addsf3+0x8>
 af8:	ba 17       	cp	r27, r26
 afa:	62 07       	cpc	r22, r18
 afc:	73 07       	cpc	r23, r19
 afe:	84 07       	cpc	r24, r20
 b00:	95 07       	cpc	r25, r21
 b02:	18 f0       	brcs	.+6      	; 0xb0a <__addsf3x+0x18>
 b04:	71 f4       	brne	.+28     	; 0xb22 <__addsf3x+0x30>
 b06:	9e f5       	brtc	.+102    	; 0xb6e <__addsf3x+0x7c>
 b08:	62 c1       	rjmp	.+708    	; 0xdce <__fp_zero>
 b0a:	0e f4       	brtc	.+2      	; 0xb0e <__addsf3x+0x1c>
 b0c:	e0 95       	com	r30
 b0e:	0b 2e       	mov	r0, r27
 b10:	ba 2f       	mov	r27, r26
 b12:	a0 2d       	mov	r26, r0
 b14:	0b 01       	movw	r0, r22
 b16:	b9 01       	movw	r22, r18
 b18:	90 01       	movw	r18, r0
 b1a:	0c 01       	movw	r0, r24
 b1c:	ca 01       	movw	r24, r20
 b1e:	a0 01       	movw	r20, r0
 b20:	11 24       	eor	r1, r1
 b22:	ff 27       	eor	r31, r31
 b24:	59 1b       	sub	r21, r25
 b26:	99 f0       	breq	.+38     	; 0xb4e <__addsf3x+0x5c>
 b28:	59 3f       	cpi	r21, 0xF9	; 249
 b2a:	50 f4       	brcc	.+20     	; 0xb40 <__addsf3x+0x4e>
 b2c:	50 3e       	cpi	r21, 0xE0	; 224
 b2e:	68 f1       	brcs	.+90     	; 0xb8a <__addsf3x+0x98>
 b30:	1a 16       	cp	r1, r26
 b32:	f0 40       	sbci	r31, 0x00	; 0
 b34:	a2 2f       	mov	r26, r18
 b36:	23 2f       	mov	r18, r19
 b38:	34 2f       	mov	r19, r20
 b3a:	44 27       	eor	r20, r20
 b3c:	58 5f       	subi	r21, 0xF8	; 248
 b3e:	f3 cf       	rjmp	.-26     	; 0xb26 <__addsf3x+0x34>
 b40:	46 95       	lsr	r20
 b42:	37 95       	ror	r19
 b44:	27 95       	ror	r18
 b46:	a7 95       	ror	r26
 b48:	f0 40       	sbci	r31, 0x00	; 0
 b4a:	53 95       	inc	r21
 b4c:	c9 f7       	brne	.-14     	; 0xb40 <__addsf3x+0x4e>
 b4e:	7e f4       	brtc	.+30     	; 0xb6e <__addsf3x+0x7c>
 b50:	1f 16       	cp	r1, r31
 b52:	ba 0b       	sbc	r27, r26
 b54:	62 0b       	sbc	r22, r18
 b56:	73 0b       	sbc	r23, r19
 b58:	84 0b       	sbc	r24, r20
 b5a:	ba f0       	brmi	.+46     	; 0xb8a <__addsf3x+0x98>
 b5c:	91 50       	subi	r25, 0x01	; 1
 b5e:	a1 f0       	breq	.+40     	; 0xb88 <__addsf3x+0x96>
 b60:	ff 0f       	add	r31, r31
 b62:	bb 1f       	adc	r27, r27
 b64:	66 1f       	adc	r22, r22
 b66:	77 1f       	adc	r23, r23
 b68:	88 1f       	adc	r24, r24
 b6a:	c2 f7       	brpl	.-16     	; 0xb5c <__addsf3x+0x6a>
 b6c:	0e c0       	rjmp	.+28     	; 0xb8a <__addsf3x+0x98>
 b6e:	ba 0f       	add	r27, r26
 b70:	62 1f       	adc	r22, r18
 b72:	73 1f       	adc	r23, r19
 b74:	84 1f       	adc	r24, r20
 b76:	48 f4       	brcc	.+18     	; 0xb8a <__addsf3x+0x98>
 b78:	87 95       	ror	r24
 b7a:	77 95       	ror	r23
 b7c:	67 95       	ror	r22
 b7e:	b7 95       	ror	r27
 b80:	f7 95       	ror	r31
 b82:	9e 3f       	cpi	r25, 0xFE	; 254
 b84:	08 f0       	brcs	.+2      	; 0xb88 <__addsf3x+0x96>
 b86:	b3 cf       	rjmp	.-154    	; 0xaee <__addsf3+0x1e>
 b88:	93 95       	inc	r25
 b8a:	88 0f       	add	r24, r24
 b8c:	08 f0       	brcs	.+2      	; 0xb90 <__addsf3x+0x9e>
 b8e:	99 27       	eor	r25, r25
 b90:	ee 0f       	add	r30, r30
 b92:	97 95       	ror	r25
 b94:	87 95       	ror	r24
 b96:	08 95       	ret

00000b98 <__divsf3>:
 b98:	0c d0       	rcall	.+24     	; 0xbb2 <__divsf3x>
 b9a:	e6 c0       	rjmp	.+460    	; 0xd68 <__fp_round>
 b9c:	de d0       	rcall	.+444    	; 0xd5a <__fp_pscB>
 b9e:	40 f0       	brcs	.+16     	; 0xbb0 <__divsf3+0x18>
 ba0:	d5 d0       	rcall	.+426    	; 0xd4c <__fp_pscA>
 ba2:	30 f0       	brcs	.+12     	; 0xbb0 <__divsf3+0x18>
 ba4:	21 f4       	brne	.+8      	; 0xbae <__divsf3+0x16>
 ba6:	5f 3f       	cpi	r21, 0xFF	; 255
 ba8:	19 f0       	breq	.+6      	; 0xbb0 <__divsf3+0x18>
 baa:	c7 c0       	rjmp	.+398    	; 0xd3a <__fp_inf>
 bac:	51 11       	cpse	r21, r1
 bae:	10 c1       	rjmp	.+544    	; 0xdd0 <__fp_szero>
 bb0:	ca c0       	rjmp	.+404    	; 0xd46 <__fp_nan>

00000bb2 <__divsf3x>:
 bb2:	eb d0       	rcall	.+470    	; 0xd8a <__fp_split3>
 bb4:	98 f3       	brcs	.-26     	; 0xb9c <__divsf3+0x4>

00000bb6 <__divsf3_pse>:
 bb6:	99 23       	and	r25, r25
 bb8:	c9 f3       	breq	.-14     	; 0xbac <__divsf3+0x14>
 bba:	55 23       	and	r21, r21
 bbc:	b1 f3       	breq	.-20     	; 0xbaa <__divsf3+0x12>
 bbe:	95 1b       	sub	r25, r21
 bc0:	55 0b       	sbc	r21, r21
 bc2:	bb 27       	eor	r27, r27
 bc4:	aa 27       	eor	r26, r26
 bc6:	62 17       	cp	r22, r18
 bc8:	73 07       	cpc	r23, r19
 bca:	84 07       	cpc	r24, r20
 bcc:	38 f0       	brcs	.+14     	; 0xbdc <__divsf3_pse+0x26>
 bce:	9f 5f       	subi	r25, 0xFF	; 255
 bd0:	5f 4f       	sbci	r21, 0xFF	; 255
 bd2:	22 0f       	add	r18, r18
 bd4:	33 1f       	adc	r19, r19
 bd6:	44 1f       	adc	r20, r20
 bd8:	aa 1f       	adc	r26, r26
 bda:	a9 f3       	breq	.-22     	; 0xbc6 <__divsf3_pse+0x10>
 bdc:	33 d0       	rcall	.+102    	; 0xc44 <__divsf3_pse+0x8e>
 bde:	0e 2e       	mov	r0, r30
 be0:	3a f0       	brmi	.+14     	; 0xbf0 <__divsf3_pse+0x3a>
 be2:	e0 e8       	ldi	r30, 0x80	; 128
 be4:	30 d0       	rcall	.+96     	; 0xc46 <__divsf3_pse+0x90>
 be6:	91 50       	subi	r25, 0x01	; 1
 be8:	50 40       	sbci	r21, 0x00	; 0
 bea:	e6 95       	lsr	r30
 bec:	00 1c       	adc	r0, r0
 bee:	ca f7       	brpl	.-14     	; 0xbe2 <__divsf3_pse+0x2c>
 bf0:	29 d0       	rcall	.+82     	; 0xc44 <__divsf3_pse+0x8e>
 bf2:	fe 2f       	mov	r31, r30
 bf4:	27 d0       	rcall	.+78     	; 0xc44 <__divsf3_pse+0x8e>
 bf6:	66 0f       	add	r22, r22
 bf8:	77 1f       	adc	r23, r23
 bfa:	88 1f       	adc	r24, r24
 bfc:	bb 1f       	adc	r27, r27
 bfe:	26 17       	cp	r18, r22
 c00:	37 07       	cpc	r19, r23
 c02:	48 07       	cpc	r20, r24
 c04:	ab 07       	cpc	r26, r27
 c06:	b0 e8       	ldi	r27, 0x80	; 128
 c08:	09 f0       	breq	.+2      	; 0xc0c <__divsf3_pse+0x56>
 c0a:	bb 0b       	sbc	r27, r27
 c0c:	80 2d       	mov	r24, r0
 c0e:	bf 01       	movw	r22, r30
 c10:	ff 27       	eor	r31, r31
 c12:	93 58       	subi	r25, 0x83	; 131
 c14:	5f 4f       	sbci	r21, 0xFF	; 255
 c16:	2a f0       	brmi	.+10     	; 0xc22 <__divsf3_pse+0x6c>
 c18:	9e 3f       	cpi	r25, 0xFE	; 254
 c1a:	51 05       	cpc	r21, r1
 c1c:	68 f0       	brcs	.+26     	; 0xc38 <__divsf3_pse+0x82>
 c1e:	8d c0       	rjmp	.+282    	; 0xd3a <__fp_inf>
 c20:	d7 c0       	rjmp	.+430    	; 0xdd0 <__fp_szero>
 c22:	5f 3f       	cpi	r21, 0xFF	; 255
 c24:	ec f3       	brlt	.-6      	; 0xc20 <__divsf3_pse+0x6a>
 c26:	98 3e       	cpi	r25, 0xE8	; 232
 c28:	dc f3       	brlt	.-10     	; 0xc20 <__divsf3_pse+0x6a>
 c2a:	86 95       	lsr	r24
 c2c:	77 95       	ror	r23
 c2e:	67 95       	ror	r22
 c30:	b7 95       	ror	r27
 c32:	f7 95       	ror	r31
 c34:	9f 5f       	subi	r25, 0xFF	; 255
 c36:	c9 f7       	brne	.-14     	; 0xc2a <__divsf3_pse+0x74>
 c38:	88 0f       	add	r24, r24
 c3a:	91 1d       	adc	r25, r1
 c3c:	96 95       	lsr	r25
 c3e:	87 95       	ror	r24
 c40:	97 f9       	bld	r25, 7
 c42:	08 95       	ret
 c44:	e1 e0       	ldi	r30, 0x01	; 1
 c46:	66 0f       	add	r22, r22
 c48:	77 1f       	adc	r23, r23
 c4a:	88 1f       	adc	r24, r24
 c4c:	bb 1f       	adc	r27, r27
 c4e:	62 17       	cp	r22, r18
 c50:	73 07       	cpc	r23, r19
 c52:	84 07       	cpc	r24, r20
 c54:	ba 07       	cpc	r27, r26
 c56:	20 f0       	brcs	.+8      	; 0xc60 <__divsf3_pse+0xaa>
 c58:	62 1b       	sub	r22, r18
 c5a:	73 0b       	sbc	r23, r19
 c5c:	84 0b       	sbc	r24, r20
 c5e:	ba 0b       	sbc	r27, r26
 c60:	ee 1f       	adc	r30, r30
 c62:	88 f7       	brcc	.-30     	; 0xc46 <__divsf3_pse+0x90>
 c64:	e0 95       	com	r30
 c66:	08 95       	ret

00000c68 <__fixunssfsi>:
 c68:	98 d0       	rcall	.+304    	; 0xd9a <__fp_splitA>
 c6a:	88 f0       	brcs	.+34     	; 0xc8e <__fixunssfsi+0x26>
 c6c:	9f 57       	subi	r25, 0x7F	; 127
 c6e:	90 f0       	brcs	.+36     	; 0xc94 <__fixunssfsi+0x2c>
 c70:	b9 2f       	mov	r27, r25
 c72:	99 27       	eor	r25, r25
 c74:	b7 51       	subi	r27, 0x17	; 23
 c76:	a0 f0       	brcs	.+40     	; 0xca0 <__fixunssfsi+0x38>
 c78:	d1 f0       	breq	.+52     	; 0xcae <__fixunssfsi+0x46>
 c7a:	66 0f       	add	r22, r22
 c7c:	77 1f       	adc	r23, r23
 c7e:	88 1f       	adc	r24, r24
 c80:	99 1f       	adc	r25, r25
 c82:	1a f0       	brmi	.+6      	; 0xc8a <__fixunssfsi+0x22>
 c84:	ba 95       	dec	r27
 c86:	c9 f7       	brne	.-14     	; 0xc7a <__fixunssfsi+0x12>
 c88:	12 c0       	rjmp	.+36     	; 0xcae <__fixunssfsi+0x46>
 c8a:	b1 30       	cpi	r27, 0x01	; 1
 c8c:	81 f0       	breq	.+32     	; 0xcae <__fixunssfsi+0x46>
 c8e:	9f d0       	rcall	.+318    	; 0xdce <__fp_zero>
 c90:	b1 e0       	ldi	r27, 0x01	; 1
 c92:	08 95       	ret
 c94:	9c c0       	rjmp	.+312    	; 0xdce <__fp_zero>
 c96:	67 2f       	mov	r22, r23
 c98:	78 2f       	mov	r23, r24
 c9a:	88 27       	eor	r24, r24
 c9c:	b8 5f       	subi	r27, 0xF8	; 248
 c9e:	39 f0       	breq	.+14     	; 0xcae <__fixunssfsi+0x46>
 ca0:	b9 3f       	cpi	r27, 0xF9	; 249
 ca2:	cc f3       	brlt	.-14     	; 0xc96 <__fixunssfsi+0x2e>
 ca4:	86 95       	lsr	r24
 ca6:	77 95       	ror	r23
 ca8:	67 95       	ror	r22
 caa:	b3 95       	inc	r27
 cac:	d9 f7       	brne	.-10     	; 0xca4 <__fixunssfsi+0x3c>
 cae:	3e f4       	brtc	.+14     	; 0xcbe <__fixunssfsi+0x56>
 cb0:	90 95       	com	r25
 cb2:	80 95       	com	r24
 cb4:	70 95       	com	r23
 cb6:	61 95       	neg	r22
 cb8:	7f 4f       	sbci	r23, 0xFF	; 255
 cba:	8f 4f       	sbci	r24, 0xFF	; 255
 cbc:	9f 4f       	sbci	r25, 0xFF	; 255
 cbe:	08 95       	ret

00000cc0 <__floatunsisf>:
 cc0:	e8 94       	clt
 cc2:	09 c0       	rjmp	.+18     	; 0xcd6 <__floatsisf+0x12>

00000cc4 <__floatsisf>:
 cc4:	97 fb       	bst	r25, 7
 cc6:	3e f4       	brtc	.+14     	; 0xcd6 <__floatsisf+0x12>
 cc8:	90 95       	com	r25
 cca:	80 95       	com	r24
 ccc:	70 95       	com	r23
 cce:	61 95       	neg	r22
 cd0:	7f 4f       	sbci	r23, 0xFF	; 255
 cd2:	8f 4f       	sbci	r24, 0xFF	; 255
 cd4:	9f 4f       	sbci	r25, 0xFF	; 255
 cd6:	99 23       	and	r25, r25
 cd8:	a9 f0       	breq	.+42     	; 0xd04 <__floatsisf+0x40>
 cda:	f9 2f       	mov	r31, r25
 cdc:	96 e9       	ldi	r25, 0x96	; 150
 cde:	bb 27       	eor	r27, r27
 ce0:	93 95       	inc	r25
 ce2:	f6 95       	lsr	r31
 ce4:	87 95       	ror	r24
 ce6:	77 95       	ror	r23
 ce8:	67 95       	ror	r22
 cea:	b7 95       	ror	r27
 cec:	f1 11       	cpse	r31, r1
 cee:	f8 cf       	rjmp	.-16     	; 0xce0 <__floatsisf+0x1c>
 cf0:	fa f4       	brpl	.+62     	; 0xd30 <__floatsisf+0x6c>
 cf2:	bb 0f       	add	r27, r27
 cf4:	11 f4       	brne	.+4      	; 0xcfa <__floatsisf+0x36>
 cf6:	60 ff       	sbrs	r22, 0
 cf8:	1b c0       	rjmp	.+54     	; 0xd30 <__floatsisf+0x6c>
 cfa:	6f 5f       	subi	r22, 0xFF	; 255
 cfc:	7f 4f       	sbci	r23, 0xFF	; 255
 cfe:	8f 4f       	sbci	r24, 0xFF	; 255
 d00:	9f 4f       	sbci	r25, 0xFF	; 255
 d02:	16 c0       	rjmp	.+44     	; 0xd30 <__floatsisf+0x6c>
 d04:	88 23       	and	r24, r24
 d06:	11 f0       	breq	.+4      	; 0xd0c <__floatsisf+0x48>
 d08:	96 e9       	ldi	r25, 0x96	; 150
 d0a:	11 c0       	rjmp	.+34     	; 0xd2e <__floatsisf+0x6a>
 d0c:	77 23       	and	r23, r23
 d0e:	21 f0       	breq	.+8      	; 0xd18 <__floatsisf+0x54>
 d10:	9e e8       	ldi	r25, 0x8E	; 142
 d12:	87 2f       	mov	r24, r23
 d14:	76 2f       	mov	r23, r22
 d16:	05 c0       	rjmp	.+10     	; 0xd22 <__floatsisf+0x5e>
 d18:	66 23       	and	r22, r22
 d1a:	71 f0       	breq	.+28     	; 0xd38 <__floatsisf+0x74>
 d1c:	96 e8       	ldi	r25, 0x86	; 134
 d1e:	86 2f       	mov	r24, r22
 d20:	70 e0       	ldi	r23, 0x00	; 0
 d22:	60 e0       	ldi	r22, 0x00	; 0
 d24:	2a f0       	brmi	.+10     	; 0xd30 <__floatsisf+0x6c>
 d26:	9a 95       	dec	r25
 d28:	66 0f       	add	r22, r22
 d2a:	77 1f       	adc	r23, r23
 d2c:	88 1f       	adc	r24, r24
 d2e:	da f7       	brpl	.-10     	; 0xd26 <__floatsisf+0x62>
 d30:	88 0f       	add	r24, r24
 d32:	96 95       	lsr	r25
 d34:	87 95       	ror	r24
 d36:	97 f9       	bld	r25, 7
 d38:	08 95       	ret

00000d3a <__fp_inf>:
 d3a:	97 f9       	bld	r25, 7
 d3c:	9f 67       	ori	r25, 0x7F	; 127
 d3e:	80 e8       	ldi	r24, 0x80	; 128
 d40:	70 e0       	ldi	r23, 0x00	; 0
 d42:	60 e0       	ldi	r22, 0x00	; 0
 d44:	08 95       	ret

00000d46 <__fp_nan>:
 d46:	9f ef       	ldi	r25, 0xFF	; 255
 d48:	80 ec       	ldi	r24, 0xC0	; 192
 d4a:	08 95       	ret

00000d4c <__fp_pscA>:
 d4c:	00 24       	eor	r0, r0
 d4e:	0a 94       	dec	r0
 d50:	16 16       	cp	r1, r22
 d52:	17 06       	cpc	r1, r23
 d54:	18 06       	cpc	r1, r24
 d56:	09 06       	cpc	r0, r25
 d58:	08 95       	ret

00000d5a <__fp_pscB>:
 d5a:	00 24       	eor	r0, r0
 d5c:	0a 94       	dec	r0
 d5e:	12 16       	cp	r1, r18
 d60:	13 06       	cpc	r1, r19
 d62:	14 06       	cpc	r1, r20
 d64:	05 06       	cpc	r0, r21
 d66:	08 95       	ret

00000d68 <__fp_round>:
 d68:	09 2e       	mov	r0, r25
 d6a:	03 94       	inc	r0
 d6c:	00 0c       	add	r0, r0
 d6e:	11 f4       	brne	.+4      	; 0xd74 <__fp_round+0xc>
 d70:	88 23       	and	r24, r24
 d72:	52 f0       	brmi	.+20     	; 0xd88 <__fp_round+0x20>
 d74:	bb 0f       	add	r27, r27
 d76:	40 f4       	brcc	.+16     	; 0xd88 <__fp_round+0x20>
 d78:	bf 2b       	or	r27, r31
 d7a:	11 f4       	brne	.+4      	; 0xd80 <__fp_round+0x18>
 d7c:	60 ff       	sbrs	r22, 0
 d7e:	04 c0       	rjmp	.+8      	; 0xd88 <__fp_round+0x20>
 d80:	6f 5f       	subi	r22, 0xFF	; 255
 d82:	7f 4f       	sbci	r23, 0xFF	; 255
 d84:	8f 4f       	sbci	r24, 0xFF	; 255
 d86:	9f 4f       	sbci	r25, 0xFF	; 255
 d88:	08 95       	ret

00000d8a <__fp_split3>:
 d8a:	57 fd       	sbrc	r21, 7
 d8c:	90 58       	subi	r25, 0x80	; 128
 d8e:	44 0f       	add	r20, r20
 d90:	55 1f       	adc	r21, r21
 d92:	59 f0       	breq	.+22     	; 0xdaa <__fp_splitA+0x10>
 d94:	5f 3f       	cpi	r21, 0xFF	; 255
 d96:	71 f0       	breq	.+28     	; 0xdb4 <__fp_splitA+0x1a>
 d98:	47 95       	ror	r20

00000d9a <__fp_splitA>:
 d9a:	88 0f       	add	r24, r24
 d9c:	97 fb       	bst	r25, 7
 d9e:	99 1f       	adc	r25, r25
 da0:	61 f0       	breq	.+24     	; 0xdba <__fp_splitA+0x20>
 da2:	9f 3f       	cpi	r25, 0xFF	; 255
 da4:	79 f0       	breq	.+30     	; 0xdc4 <__fp_splitA+0x2a>
 da6:	87 95       	ror	r24
 da8:	08 95       	ret
 daa:	12 16       	cp	r1, r18
 dac:	13 06       	cpc	r1, r19
 dae:	14 06       	cpc	r1, r20
 db0:	55 1f       	adc	r21, r21
 db2:	f2 cf       	rjmp	.-28     	; 0xd98 <__fp_split3+0xe>
 db4:	46 95       	lsr	r20
 db6:	f1 df       	rcall	.-30     	; 0xd9a <__fp_splitA>
 db8:	08 c0       	rjmp	.+16     	; 0xdca <__fp_splitA+0x30>
 dba:	16 16       	cp	r1, r22
 dbc:	17 06       	cpc	r1, r23
 dbe:	18 06       	cpc	r1, r24
 dc0:	99 1f       	adc	r25, r25
 dc2:	f1 cf       	rjmp	.-30     	; 0xda6 <__fp_splitA+0xc>
 dc4:	86 95       	lsr	r24
 dc6:	71 05       	cpc	r23, r1
 dc8:	61 05       	cpc	r22, r1
 dca:	08 94       	sec
 dcc:	08 95       	ret

00000dce <__fp_zero>:
 dce:	e8 94       	clt

00000dd0 <__fp_szero>:
 dd0:	bb 27       	eor	r27, r27
 dd2:	66 27       	eor	r22, r22
 dd4:	77 27       	eor	r23, r23
 dd6:	cb 01       	movw	r24, r22
 dd8:	97 f9       	bld	r25, 7
 dda:	08 95       	ret

00000ddc <__mulsf3>:
 ddc:	0b d0       	rcall	.+22     	; 0xdf4 <__mulsf3x>
 dde:	c4 cf       	rjmp	.-120    	; 0xd68 <__fp_round>
 de0:	b5 df       	rcall	.-150    	; 0xd4c <__fp_pscA>
 de2:	28 f0       	brcs	.+10     	; 0xdee <__mulsf3+0x12>
 de4:	ba df       	rcall	.-140    	; 0xd5a <__fp_pscB>
 de6:	18 f0       	brcs	.+6      	; 0xdee <__mulsf3+0x12>
 de8:	95 23       	and	r25, r21
 dea:	09 f0       	breq	.+2      	; 0xdee <__mulsf3+0x12>
 dec:	a6 cf       	rjmp	.-180    	; 0xd3a <__fp_inf>
 dee:	ab cf       	rjmp	.-170    	; 0xd46 <__fp_nan>
 df0:	11 24       	eor	r1, r1
 df2:	ee cf       	rjmp	.-36     	; 0xdd0 <__fp_szero>

00000df4 <__mulsf3x>:
 df4:	ca df       	rcall	.-108    	; 0xd8a <__fp_split3>
 df6:	a0 f3       	brcs	.-24     	; 0xde0 <__mulsf3+0x4>

00000df8 <__mulsf3_pse>:
 df8:	95 9f       	mul	r25, r21
 dfa:	d1 f3       	breq	.-12     	; 0xdf0 <__mulsf3+0x14>
 dfc:	95 0f       	add	r25, r21
 dfe:	50 e0       	ldi	r21, 0x00	; 0
 e00:	55 1f       	adc	r21, r21
 e02:	62 9f       	mul	r22, r18
 e04:	f0 01       	movw	r30, r0
 e06:	72 9f       	mul	r23, r18
 e08:	bb 27       	eor	r27, r27
 e0a:	f0 0d       	add	r31, r0
 e0c:	b1 1d       	adc	r27, r1
 e0e:	63 9f       	mul	r22, r19
 e10:	aa 27       	eor	r26, r26
 e12:	f0 0d       	add	r31, r0
 e14:	b1 1d       	adc	r27, r1
 e16:	aa 1f       	adc	r26, r26
 e18:	64 9f       	mul	r22, r20
 e1a:	66 27       	eor	r22, r22
 e1c:	b0 0d       	add	r27, r0
 e1e:	a1 1d       	adc	r26, r1
 e20:	66 1f       	adc	r22, r22
 e22:	82 9f       	mul	r24, r18
 e24:	22 27       	eor	r18, r18
 e26:	b0 0d       	add	r27, r0
 e28:	a1 1d       	adc	r26, r1
 e2a:	62 1f       	adc	r22, r18
 e2c:	73 9f       	mul	r23, r19
 e2e:	b0 0d       	add	r27, r0
 e30:	a1 1d       	adc	r26, r1
 e32:	62 1f       	adc	r22, r18
 e34:	83 9f       	mul	r24, r19
 e36:	a0 0d       	add	r26, r0
 e38:	61 1d       	adc	r22, r1
 e3a:	22 1f       	adc	r18, r18
 e3c:	74 9f       	mul	r23, r20
 e3e:	33 27       	eor	r19, r19
 e40:	a0 0d       	add	r26, r0
 e42:	61 1d       	adc	r22, r1
 e44:	23 1f       	adc	r18, r19
 e46:	84 9f       	mul	r24, r20
 e48:	60 0d       	add	r22, r0
 e4a:	21 1d       	adc	r18, r1
 e4c:	82 2f       	mov	r24, r18
 e4e:	76 2f       	mov	r23, r22
 e50:	6a 2f       	mov	r22, r26
 e52:	11 24       	eor	r1, r1
 e54:	9f 57       	subi	r25, 0x7F	; 127
 e56:	50 40       	sbci	r21, 0x00	; 0
 e58:	8a f0       	brmi	.+34     	; 0xe7c <__mulsf3_pse+0x84>
 e5a:	e1 f0       	breq	.+56     	; 0xe94 <__mulsf3_pse+0x9c>
 e5c:	88 23       	and	r24, r24
 e5e:	4a f0       	brmi	.+18     	; 0xe72 <__mulsf3_pse+0x7a>
 e60:	ee 0f       	add	r30, r30
 e62:	ff 1f       	adc	r31, r31
 e64:	bb 1f       	adc	r27, r27
 e66:	66 1f       	adc	r22, r22
 e68:	77 1f       	adc	r23, r23
 e6a:	88 1f       	adc	r24, r24
 e6c:	91 50       	subi	r25, 0x01	; 1
 e6e:	50 40       	sbci	r21, 0x00	; 0
 e70:	a9 f7       	brne	.-22     	; 0xe5c <__mulsf3_pse+0x64>
 e72:	9e 3f       	cpi	r25, 0xFE	; 254
 e74:	51 05       	cpc	r21, r1
 e76:	70 f0       	brcs	.+28     	; 0xe94 <__mulsf3_pse+0x9c>
 e78:	60 cf       	rjmp	.-320    	; 0xd3a <__fp_inf>
 e7a:	aa cf       	rjmp	.-172    	; 0xdd0 <__fp_szero>
 e7c:	5f 3f       	cpi	r21, 0xFF	; 255
 e7e:	ec f3       	brlt	.-6      	; 0xe7a <__mulsf3_pse+0x82>
 e80:	98 3e       	cpi	r25, 0xE8	; 232
 e82:	dc f3       	brlt	.-10     	; 0xe7a <__mulsf3_pse+0x82>
 e84:	86 95       	lsr	r24
 e86:	77 95       	ror	r23
 e88:	67 95       	ror	r22
 e8a:	b7 95       	ror	r27
 e8c:	f7 95       	ror	r31
 e8e:	e7 95       	ror	r30
 e90:	9f 5f       	subi	r25, 0xFF	; 255
 e92:	c1 f7       	brne	.-16     	; 0xe84 <__mulsf3_pse+0x8c>
 e94:	fe 2b       	or	r31, r30
 e96:	88 0f       	add	r24, r24
 e98:	91 1d       	adc	r25, r1
 e9a:	96 95       	lsr	r25
 e9c:	87 95       	ror	r24
 e9e:	97 f9       	bld	r25, 7
 ea0:	08 95       	ret

00000ea2 <__mulsi3>:
 ea2:	db 01       	movw	r26, r22
 ea4:	8f 93       	push	r24
 ea6:	9f 93       	push	r25
 ea8:	1a d0       	rcall	.+52     	; 0xede <__muluhisi3>
 eaa:	bf 91       	pop	r27
 eac:	af 91       	pop	r26
 eae:	a2 9f       	mul	r26, r18
 eb0:	80 0d       	add	r24, r0
 eb2:	91 1d       	adc	r25, r1
 eb4:	a3 9f       	mul	r26, r19
 eb6:	90 0d       	add	r25, r0
 eb8:	b2 9f       	mul	r27, r18
 eba:	90 0d       	add	r25, r0
 ebc:	11 24       	eor	r1, r1
 ebe:	08 95       	ret

00000ec0 <__umulhisi3>:
 ec0:	a2 9f       	mul	r26, r18
 ec2:	b0 01       	movw	r22, r0
 ec4:	b3 9f       	mul	r27, r19
 ec6:	c0 01       	movw	r24, r0
 ec8:	a3 9f       	mul	r26, r19
 eca:	70 0d       	add	r23, r0
 ecc:	81 1d       	adc	r24, r1
 ece:	11 24       	eor	r1, r1
 ed0:	91 1d       	adc	r25, r1
 ed2:	b2 9f       	mul	r27, r18
 ed4:	70 0d       	add	r23, r0
 ed6:	81 1d       	adc	r24, r1
 ed8:	11 24       	eor	r1, r1
 eda:	91 1d       	adc	r25, r1
 edc:	08 95       	ret

00000ede <__muluhisi3>:
 ede:	f0 df       	rcall	.-32     	; 0xec0 <__umulhisi3>
 ee0:	a5 9f       	mul	r26, r21
 ee2:	90 0d       	add	r25, r0
 ee4:	b4 9f       	mul	r27, r20
 ee6:	90 0d       	add	r25, r0
 ee8:	a4 9f       	mul	r26, r20
 eea:	80 0d       	add	r24, r0
 eec:	91 1d       	adc	r25, r1
 eee:	11 24       	eor	r1, r1
 ef0:	08 95       	ret

00000ef2 <__itoa_ncheck>:
 ef2:	bb 27       	eor	r27, r27
 ef4:	4a 30       	cpi	r20, 0x0A	; 10
 ef6:	31 f4       	brne	.+12     	; 0xf04 <__itoa_ncheck+0x12>
 ef8:	99 23       	and	r25, r25
 efa:	22 f4       	brpl	.+8      	; 0xf04 <__itoa_ncheck+0x12>
 efc:	bd e2       	ldi	r27, 0x2D	; 45
 efe:	90 95       	com	r25
 f00:	81 95       	neg	r24
 f02:	9f 4f       	sbci	r25, 0xFF	; 255
 f04:	01 c0       	rjmp	.+2      	; 0xf08 <__utoa_common>

00000f06 <__utoa_ncheck>:
 f06:	bb 27       	eor	r27, r27

00000f08 <__utoa_common>:
 f08:	fb 01       	movw	r30, r22
 f0a:	55 27       	eor	r21, r21
 f0c:	aa 27       	eor	r26, r26
 f0e:	88 0f       	add	r24, r24
 f10:	99 1f       	adc	r25, r25
 f12:	aa 1f       	adc	r26, r26
 f14:	a4 17       	cp	r26, r20
 f16:	10 f0       	brcs	.+4      	; 0xf1c <__utoa_common+0x14>
 f18:	a4 1b       	sub	r26, r20
 f1a:	83 95       	inc	r24
 f1c:	50 51       	subi	r21, 0x10	; 16
 f1e:	b9 f7       	brne	.-18     	; 0xf0e <__utoa_common+0x6>
 f20:	a0 5d       	subi	r26, 0xD0	; 208
 f22:	aa 33       	cpi	r26, 0x3A	; 58
 f24:	08 f0       	brcs	.+2      	; 0xf28 <__utoa_common+0x20>
 f26:	a9 5d       	subi	r26, 0xD9	; 217
 f28:	a1 93       	st	Z+, r26
 f2a:	00 97       	sbiw	r24, 0x00	; 0
 f2c:	79 f7       	brne	.-34     	; 0xf0c <__utoa_common+0x4>
 f2e:	b1 11       	cpse	r27, r1
 f30:	b1 93       	st	Z+, r27
 f32:	11 92       	st	Z+, r1
 f34:	cb 01       	movw	r24, r22
 f36:	00 c0       	rjmp	.+0      	; 0xf38 <strrev>

00000f38 <strrev>:
 f38:	dc 01       	movw	r26, r24
 f3a:	fc 01       	movw	r30, r24
 f3c:	67 2f       	mov	r22, r23
 f3e:	71 91       	ld	r23, Z+
 f40:	77 23       	and	r23, r23
 f42:	e1 f7       	brne	.-8      	; 0xf3c <strrev+0x4>
 f44:	32 97       	sbiw	r30, 0x02	; 2
 f46:	04 c0       	rjmp	.+8      	; 0xf50 <strrev+0x18>
 f48:	7c 91       	ld	r23, X
 f4a:	6d 93       	st	X+, r22
 f4c:	70 83       	st	Z, r23
 f4e:	62 91       	ld	r22, -Z
 f50:	ae 17       	cp	r26, r30
 f52:	bf 07       	cpc	r27, r31
 f54:	c8 f3       	brcs	.-14     	; 0xf48 <strrev+0x10>
 f56:	08 95       	ret

00000f58 <_exit>:
 f58:	f8 94       	cli

00000f5a <__stop_program>:
 f5a:	ff cf       	rjmp	.-2      	; 0xf5a <__stop_program>
