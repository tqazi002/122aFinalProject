
HelloWorld_Photoresistor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00000794  00000828  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000794  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800134  00800134  0000085c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000085c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000088c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002888  00000000  00000000  00000a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bbc  00000000  00000000  000032f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000eb4  00000000  00000000  00003eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000738  00000000  00000000  00004d64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000782  00000000  00000000  0000549c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000029bb  00000000  00000000  00005c1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  000085d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
   2:	00 00       	nop
   4:	50 c1       	rjmp	.+672    	; 0x2a6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c1       	rjmp	.+668    	; 0x2a6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c1       	rjmp	.+664    	; 0x2a6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c1       	rjmp	.+660    	; 0x2a6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c1       	rjmp	.+656    	; 0x2a6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c1       	rjmp	.+652    	; 0x2a6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c1       	rjmp	.+648    	; 0x2a6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c1       	rjmp	.+644    	; 0x2a6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c1       	rjmp	.+640    	; 0x2a6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c1       	rjmp	.+636    	; 0x2a6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c1       	rjmp	.+632    	; 0x2a6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c1       	rjmp	.+628    	; 0x2a6 <__bad_interrupt>
  32:	00 00       	nop
  34:	39 c1       	rjmp	.+626    	; 0x2a8 <__vector_13>
  36:	00 00       	nop
  38:	36 c1       	rjmp	.+620    	; 0x2a6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c1       	rjmp	.+616    	; 0x2a6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c1       	rjmp	.+612    	; 0x2a6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c1       	rjmp	.+608    	; 0x2a6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c1       	rjmp	.+604    	; 0x2a6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2c c1       	rjmp	.+600    	; 0x2a6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2a c1       	rjmp	.+596    	; 0x2a6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c1       	rjmp	.+592    	; 0x2a6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c1       	rjmp	.+588    	; 0x2a6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c1       	rjmp	.+584    	; 0x2a6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c1       	rjmp	.+580    	; 0x2a6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c1       	rjmp	.+576    	; 0x2a6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c1       	rjmp	.+572    	; 0x2a6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c1       	rjmp	.+568    	; 0x2a6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1a c1       	rjmp	.+564    	; 0x2a6 <__bad_interrupt>
  72:	00 00       	nop
  74:	18 c1       	rjmp	.+560    	; 0x2a6 <__bad_interrupt>
  76:	00 00       	nop
  78:	16 c1       	rjmp	.+556    	; 0x2a6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	14 c1       	rjmp	.+552    	; 0x2a6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	12 c1       	rjmp	.+548    	; 0x2a6 <__bad_interrupt>
  82:	00 00       	nop
  84:	10 c1       	rjmp	.+544    	; 0x2a6 <__bad_interrupt>
  86:	00 00       	nop
  88:	0e c1       	rjmp	.+540    	; 0x2a6 <__bad_interrupt>
	...

0000008c <FONT_CHARS>:
  8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  bc:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
  cc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
 10c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
 11c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
 12c:	32 49 79 41 3e 7e 11 11 11 7e 08 6b 3f 68 08 3e     2IyA>~...~.k?h.>
 13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 14c:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
 15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 16c:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 19c:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
 1ac:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
 1bc:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
 1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1ec:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
 1fc:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
 20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 25c:	00 00 41 36 08 00 08 08 2a 1c 08 08 1c 2a 08 08     ..A6....*....*..

0000026c <__ctors_end>:
 26c:	11 24       	eor	r1, r1
 26e:	1f be       	out	0x3f, r1	; 63
 270:	cf ef       	ldi	r28, 0xFF	; 255
 272:	d0 e4       	ldi	r29, 0x40	; 64
 274:	de bf       	out	0x3e, r29	; 62
 276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
 278:	11 e0       	ldi	r17, 0x01	; 1
 27a:	a0 e0       	ldi	r26, 0x00	; 0
 27c:	b1 e0       	ldi	r27, 0x01	; 1
 27e:	e4 e9       	ldi	r30, 0x94	; 148
 280:	f7 e0       	ldi	r31, 0x07	; 7
 282:	00 e0       	ldi	r16, 0x00	; 0
 284:	0b bf       	out	0x3b, r16	; 59
 286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
 288:	07 90       	elpm	r0, Z+
 28a:	0d 92       	st	X+, r0
 28c:	a4 33       	cpi	r26, 0x34	; 52
 28e:	b1 07       	cpc	r27, r17
 290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
 292:	21 e0       	ldi	r18, 0x01	; 1
 294:	a4 e3       	ldi	r26, 0x34	; 52
 296:	b1 e0       	ldi	r27, 0x01	; 1
 298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
 29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
 29c:	a0 34       	cpi	r26, 0x40	; 64
 29e:	b2 07       	cpc	r27, r18
 2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
 2a2:	1a d2       	rcall	.+1076   	; 0x6d8 <main>
 2a4:	75 c2       	rjmp	.+1258   	; 0x790 <_exit>

000002a6 <__bad_interrupt>:
 2a6:	ac ce       	rjmp	.-680    	; 0x0 <__vectors>

000002a8 <__vector_13>:
 byte y= i / 21;
 char ascii = (i % 96)+32;
 PutCh(ascii,x*6,y*8,CYAN);
 }
 msDelay(2000);
}
 2a8:	1f 92       	push	r1
 2aa:	0f 92       	push	r0
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	0f 92       	push	r0
 2b0:	11 24       	eor	r1, r1
 2b2:	8f 93       	push	r24
 2b4:	9f 93       	push	r25
 2b6:	af 93       	push	r26
 2b8:	bf 93       	push	r27
 2ba:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <_avr_timer_cntcurr>
 2be:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <_avr_timer_cntcurr+0x1>
 2c2:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <_avr_timer_cntcurr+0x2>
 2c6:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <_avr_timer_cntcurr+0x3>
 2ca:	01 97       	sbiw	r24, 0x01	; 1
 2cc:	a1 09       	sbc	r26, r1
 2ce:	b1 09       	sbc	r27, r1
 2d0:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <_avr_timer_cntcurr>
 2d4:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <_avr_timer_cntcurr+0x1>
 2d8:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <_avr_timer_cntcurr+0x2>
 2dc:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <_avr_timer_cntcurr+0x3>
 2e0:	89 2b       	or	r24, r25
 2e2:	8a 2b       	or	r24, r26
 2e4:	8b 2b       	or	r24, r27
 2e6:	99 f4       	brne	.+38     	; 0x30e <__vector_13+0x66>
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <TimerFlag>
 2ee:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_avr_timer_M>
 2f2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_avr_timer_M+0x1>
 2f6:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <_avr_timer_M+0x2>
 2fa:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <_avr_timer_M+0x3>
 2fe:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <_avr_timer_cntcurr>
 302:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <_avr_timer_cntcurr+0x1>
 306:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <_avr_timer_cntcurr+0x2>
 30a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <_avr_timer_cntcurr+0x3>
 30e:	bf 91       	pop	r27
 310:	af 91       	pop	r26
 312:	9f 91       	pop	r25
 314:	8f 91       	pop	r24
 316:	0f 90       	pop	r0
 318:	0f be       	out	0x3f, r0	; 63
 31a:	0f 90       	pop	r0
 31c:	1f 90       	pop	r1
 31e:	18 95       	reti

00000320 <SetupPorts>:
 320:	8f ef       	ldi	r24, 0xFF	; 255
 322:	84 b9       	out	0x04, r24	; 4
 324:	17 b8       	out	0x07, r1	; 7
 326:	28 9a       	sbi	0x05, 0	; 5
 328:	08 95       	ret

0000032a <msDelay>:
 32a:	18 16       	cp	r1, r24
 32c:	19 06       	cpc	r1, r25
 32e:	6c f4       	brge	.+26     	; 0x34a <msDelay+0x20>
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	ef e9       	ldi	r30, 0x9F	; 159
 336:	ff e0       	ldi	r31, 0x0F	; 15
 338:	31 97       	sbiw	r30, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <msDelay+0xe>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <msDelay+0x14>
 33e:	00 00       	nop
 340:	2f 5f       	subi	r18, 0xFF	; 255
 342:	3f 4f       	sbci	r19, 0xFF	; 255
 344:	82 17       	cp	r24, r18
 346:	93 07       	cpc	r25, r19
 348:	a9 f7       	brne	.-22     	; 0x334 <msDelay+0xa>
 34a:	08 95       	ret

0000034c <OpenSPI>:
 34c:	80 e5       	ldi	r24, 0x50	; 80
 34e:	8c bd       	out	0x2c, r24	; 44
 350:	8d b5       	in	r24, 0x2d	; 45
 352:	81 60       	ori	r24, 0x01	; 1
 354:	8d bd       	out	0x2d, r24	; 45
 356:	08 95       	ret

00000358 <Xfer>:
 358:	8e bd       	out	0x2e, r24	; 46
 35a:	0d b4       	in	r0, 0x2d	; 45
 35c:	07 fe       	sbrs	r0, 7
 35e:	fd cf       	rjmp	.-6      	; 0x35a <Xfer+0x2>
 360:	8e b5       	in	r24, 0x2e	; 46
 362:	08 95       	ret

00000364 <WriteCmd>:
 364:	29 98       	cbi	0x05, 1	; 5
 366:	f8 df       	rcall	.-16     	; 0x358 <Xfer>
 368:	29 9a       	sbi	0x05, 1	; 5
 36a:	08 95       	ret

0000036c <WriteWord>:
 36c:	cf 93       	push	r28
 36e:	c8 2f       	mov	r28, r24
 370:	89 2f       	mov	r24, r25
 372:	f2 df       	rcall	.-28     	; 0x358 <Xfer>
 374:	8c 2f       	mov	r24, r28
 376:	f0 df       	rcall	.-32     	; 0x358 <Xfer>
 378:	cf 91       	pop	r28
 37a:	08 95       	ret

0000037c <Write565>:
 37c:	0f 93       	push	r16
 37e:	1f 93       	push	r17
 380:	cf 93       	push	r28
 382:	df 93       	push	r29
 384:	08 2f       	mov	r16, r24
 386:	19 2f       	mov	r17, r25
 388:	eb 01       	movw	r28, r22
 38a:	8c e2       	ldi	r24, 0x2C	; 44
 38c:	eb df       	rcall	.-42     	; 0x364 <WriteCmd>
 38e:	20 97       	sbiw	r28, 0x00	; 0
 390:	59 f0       	breq	.+22     	; 0x3a8 <Write565+0x2c>
 392:	91 2f       	mov	r25, r17
 394:	9e bd       	out	0x2e, r25	; 46
 396:	0d b4       	in	r0, 0x2d	; 45
 398:	07 fe       	sbrs	r0, 7
 39a:	fd cf       	rjmp	.-6      	; 0x396 <Write565+0x1a>
 39c:	0e bd       	out	0x2e, r16	; 46
 39e:	0d b4       	in	r0, 0x2d	; 45
 3a0:	07 fe       	sbrs	r0, 7
 3a2:	fd cf       	rjmp	.-6      	; 0x39e <Write565+0x22>
 3a4:	21 97       	sbiw	r28, 0x01	; 1
 3a6:	b1 f7       	brne	.-20     	; 0x394 <Write565+0x18>
 3a8:	df 91       	pop	r29
 3aa:	cf 91       	pop	r28
 3ac:	1f 91       	pop	r17
 3ae:	0f 91       	pop	r16
 3b0:	08 95       	ret

000003b2 <HardwareReset>:
 3b2:	28 98       	cbi	0x05, 0	; 5
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	b8 df       	rcall	.-144    	; 0x32a <msDelay>
 3ba:	28 9a       	sbi	0x05, 0	; 5
 3bc:	86 e9       	ldi	r24, 0x96	; 150
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	b4 cf       	rjmp	.-152    	; 0x32a <msDelay>
 3c2:	08 95       	ret

000003c4 <InitDisplay>:
 3c4:	f6 df       	rcall	.-20     	; 0x3b2 <HardwareReset>
 3c6:	81 e1       	ldi	r24, 0x11	; 17
 3c8:	cd df       	rcall	.-102    	; 0x364 <WriteCmd>
 3ca:	86 e9       	ldi	r24, 0x96	; 150
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	ad df       	rcall	.-166    	; 0x32a <msDelay>
 3d0:	8a e3       	ldi	r24, 0x3A	; 58
 3d2:	c8 df       	rcall	.-112    	; 0x364 <WriteCmd>
 3d4:	85 e0       	ldi	r24, 0x05	; 5
 3d6:	c0 df       	rcall	.-128    	; 0x358 <Xfer>
 3d8:	89 e2       	ldi	r24, 0x29	; 41
 3da:	c4 cf       	rjmp	.-120    	; 0x364 <WriteCmd>
 3dc:	08 95       	ret

000003de <SetAddrWindow>:
 3de:	0f 93       	push	r16
 3e0:	1f 93       	push	r17
 3e2:	cf 93       	push	r28
 3e4:	df 93       	push	r29
 3e6:	08 2f       	mov	r16, r24
 3e8:	d6 2f       	mov	r29, r22
 3ea:	14 2f       	mov	r17, r20
 3ec:	c2 2f       	mov	r28, r18
 3ee:	8a e2       	ldi	r24, 0x2A	; 42
 3f0:	b9 df       	rcall	.-142    	; 0x364 <WriteCmd>
 3f2:	80 2f       	mov	r24, r16
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	ba df       	rcall	.-140    	; 0x36c <WriteWord>
 3f8:	81 2f       	mov	r24, r17
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	b7 df       	rcall	.-146    	; 0x36c <WriteWord>
 3fe:	8b e2       	ldi	r24, 0x2B	; 43
 400:	b1 df       	rcall	.-158    	; 0x364 <WriteCmd>
 402:	8d 2f       	mov	r24, r29
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	b2 df       	rcall	.-156    	; 0x36c <WriteWord>
 408:	8c 2f       	mov	r24, r28
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	af df       	rcall	.-162    	; 0x36c <WriteWord>
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	1f 91       	pop	r17
 414:	0f 91       	pop	r16
 416:	08 95       	ret

00000418 <ClearScreen>:
 418:	2f e9       	ldi	r18, 0x9F	; 159
 41a:	4f e7       	ldi	r20, 0x7F	; 127
 41c:	60 e0       	ldi	r22, 0x00	; 0
 41e:	80 e0       	ldi	r24, 0x00	; 0
 420:	de df       	rcall	.-68     	; 0x3de <SetAddrWindow>
 422:	8c e2       	ldi	r24, 0x2C	; 44
 424:	9f df       	rcall	.-194    	; 0x364 <WriteCmd>
 426:	80 e0       	ldi	r24, 0x00	; 0
 428:	90 ea       	ldi	r25, 0xA0	; 160
 42a:	1e bc       	out	0x2e, r1	; 46
 42c:	0d b4       	in	r0, 0x2d	; 45
 42e:	07 fe       	sbrs	r0, 7
 430:	fd cf       	rjmp	.-6      	; 0x42c <ClearScreen+0x14>
 432:	01 97       	sbiw	r24, 0x01	; 1
 434:	d1 f7       	brne	.-12     	; 0x42a <ClearScreen+0x12>
 436:	08 95       	ret

00000438 <FillRect>:
 438:	ef 92       	push	r14
 43a:	ff 92       	push	r15
 43c:	0f 93       	push	r16
 43e:	1f 93       	push	r17
 440:	cf 93       	push	r28
 442:	df 93       	push	r29
 444:	e8 2e       	mov	r14, r24
 446:	f6 2e       	mov	r15, r22
 448:	c4 2f       	mov	r28, r20
 44a:	d2 2f       	mov	r29, r18
 44c:	c8 df       	rcall	.-112    	; 0x3de <SetAddrWindow>
 44e:	ce 19       	sub	r28, r14
 450:	cf 5f       	subi	r28, 0xFF	; 255
 452:	df 19       	sub	r29, r15
 454:	df 5f       	subi	r29, 0xFF	; 255
 456:	cd 9f       	mul	r28, r29
 458:	b0 01       	movw	r22, r0
 45a:	11 24       	eor	r1, r1
 45c:	c8 01       	movw	r24, r16
 45e:	8e df       	rcall	.-228    	; 0x37c <Write565>
 460:	df 91       	pop	r29
 462:	cf 91       	pop	r28
 464:	1f 91       	pop	r17
 466:	0f 91       	pop	r16
 468:	ff 90       	pop	r15
 46a:	ef 90       	pop	r14
 46c:	08 95       	ret

0000046e <AdvanceCursor>:
 46e:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <curX>
 472:	8f 5f       	subi	r24, 0xFF	; 255
 474:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <curX>
 478:	85 31       	cpi	r24, 0x15	; 21
 47a:	38 f0       	brcs	.+14     	; 0x48a <AdvanceCursor+0x1c>
 47c:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <curY>
 480:	8f 5f       	subi	r24, 0xFF	; 255
 482:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <curY>
 486:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <curX>
 48a:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <curY>
 48e:	84 31       	cpi	r24, 0x14	; 20
 490:	10 f0       	brcs	.+4      	; 0x496 <AdvanceCursor+0x28>
 492:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <curY>
 496:	08 95       	ret

00000498 <SetOrientation>:
 498:	cf 93       	push	r28
 49a:	84 3b       	cpi	r24, 0xB4	; 180
 49c:	91 05       	cpc	r25, r1
 49e:	41 f0       	breq	.+16     	; 0x4b0 <SetOrientation+0x18>
 4a0:	8e 30       	cpi	r24, 0x0E	; 14
 4a2:	21 e0       	ldi	r18, 0x01	; 1
 4a4:	92 07       	cpc	r25, r18
 4a6:	31 f0       	breq	.+12     	; 0x4b4 <SetOrientation+0x1c>
 4a8:	8a 35       	cpi	r24, 0x5A	; 90
 4aa:	91 05       	cpc	r25, r1
 4ac:	29 f4       	brne	.+10     	; 0x4b8 <SetOrientation+0x20>
 4ae:	06 c0       	rjmp	.+12     	; 0x4bc <SetOrientation+0x24>
 4b0:	c0 ec       	ldi	r28, 0xC0	; 192
 4b2:	05 c0       	rjmp	.+10     	; 0x4be <SetOrientation+0x26>
 4b4:	c0 ea       	ldi	r28, 0xA0	; 160
 4b6:	03 c0       	rjmp	.+6      	; 0x4be <SetOrientation+0x26>
 4b8:	c0 e0       	ldi	r28, 0x00	; 0
 4ba:	01 c0       	rjmp	.+2      	; 0x4be <SetOrientation+0x26>
 4bc:	c0 e6       	ldi	r28, 0x60	; 96
 4be:	86 e3       	ldi	r24, 0x36	; 54
 4c0:	51 df       	rcall	.-350    	; 0x364 <WriteCmd>
 4c2:	8c 2f       	mov	r24, r28
 4c4:	49 df       	rcall	.-366    	; 0x358 <Xfer>
 4c6:	cf 91       	pop	r28
 4c8:	08 95       	ret

000004ca <PutCh>:
 4ca:	9f 92       	push	r9
 4cc:	af 92       	push	r10
 4ce:	bf 92       	push	r11
 4d0:	cf 92       	push	r12
 4d2:	df 92       	push	r13
 4d4:	ef 92       	push	r14
 4d6:	ff 92       	push	r15
 4d8:	0f 93       	push	r16
 4da:	1f 93       	push	r17
 4dc:	cf 93       	push	r28
 4de:	df 93       	push	r29
 4e0:	c8 2f       	mov	r28, r24
 4e2:	86 2f       	mov	r24, r22
 4e4:	64 2f       	mov	r22, r20
 4e6:	b2 2e       	mov	r11, r18
 4e8:	c3 2e       	mov	r12, r19
 4ea:	26 e0       	ldi	r18, 0x06	; 6
 4ec:	24 0f       	add	r18, r20
 4ee:	44 e0       	ldi	r20, 0x04	; 4
 4f0:	48 0f       	add	r20, r24
 4f2:	75 df       	rcall	.-278    	; 0x3de <SetAddrWindow>
 4f4:	8c e2       	ldi	r24, 0x2C	; 44
 4f6:	36 df       	rcall	.-404    	; 0x364 <WriteCmd>
 4f8:	8c 2f       	mov	r24, r28
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	80 97       	sbiw	r24, 0x20	; 32
 4fe:	7c 01       	movw	r14, r24
 500:	ee 0c       	add	r14, r14
 502:	ff 1c       	adc	r15, r15
 504:	ee 0c       	add	r14, r14
 506:	ff 1c       	adc	r15, r15
 508:	8e 0d       	add	r24, r14
 50a:	9f 1d       	adc	r25, r15
 50c:	9c 01       	movw	r18, r24
 50e:	24 57       	subi	r18, 0x74	; 116
 510:	3f 4f       	sbci	r19, 0xFF	; 255
 512:	79 01       	movw	r14, r18
 514:	0f 2e       	mov	r0, r31
 516:	f7 e0       	ldi	r31, 0x07	; 7
 518:	df 2e       	mov	r13, r31
 51a:	f0 2d       	mov	r31, r0
 51c:	d1 e0       	ldi	r29, 0x01	; 1
 51e:	99 24       	eor	r9, r9
 520:	9a 94       	dec	r9
 522:	aa 24       	eor	r10, r10
 524:	aa 94       	dec	r10
 526:	13 c0       	rjmp	.+38     	; 0x54e <PutCh+0x84>
 528:	f8 01       	movw	r30, r16
 52a:	84 91       	lpm	r24, Z
 52c:	8d 23       	and	r24, r29
 52e:	19 f0       	breq	.+6      	; 0x536 <PutCh+0x6c>
 530:	8b 2d       	mov	r24, r11
 532:	9c 2d       	mov	r25, r12
 534:	02 c0       	rjmp	.+4      	; 0x53a <PutCh+0x70>
 536:	89 2d       	mov	r24, r9
 538:	9a 2d       	mov	r25, r10
 53a:	18 df       	rcall	.-464    	; 0x36c <WriteWord>
 53c:	c1 50       	subi	r28, 0x01	; 1
 53e:	0f 5f       	subi	r16, 0xFF	; 255
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	c1 11       	cpse	r28, r1
 544:	f1 cf       	rjmp	.-30     	; 0x528 <PutCh+0x5e>
 546:	dd 0f       	add	r29, r29
 548:	da 94       	dec	r13
 54a:	dd 20       	and	r13, r13
 54c:	19 f0       	breq	.+6      	; 0x554 <PutCh+0x8a>
 54e:	87 01       	movw	r16, r14
 550:	c5 e0       	ldi	r28, 0x05	; 5
 552:	ea cf       	rjmp	.-44     	; 0x528 <PutCh+0x5e>
 554:	df 91       	pop	r29
 556:	cf 91       	pop	r28
 558:	1f 91       	pop	r17
 55a:	0f 91       	pop	r16
 55c:	ff 90       	pop	r15
 55e:	ef 90       	pop	r14
 560:	df 90       	pop	r13
 562:	cf 90       	pop	r12
 564:	bf 90       	pop	r11
 566:	af 90       	pop	r10
 568:	9f 90       	pop	r9
 56a:	08 95       	ret

0000056c <WriteChar>:
 56c:	9b 01       	movw	r18, r22
 56e:	40 91 3e 01 	lds	r20, 0x013E	; 0x80013e <curY>
 572:	44 0f       	add	r20, r20
 574:	44 0f       	add	r20, r20
 576:	44 0f       	add	r20, r20
 578:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <curX>
 57c:	69 2f       	mov	r22, r25
 57e:	66 0f       	add	r22, r22
 580:	96 0f       	add	r25, r22
 582:	69 2f       	mov	r22, r25
 584:	66 0f       	add	r22, r22
 586:	a1 df       	rcall	.-190    	; 0x4ca <PutCh>
 588:	72 cf       	rjmp	.-284    	; 0x46e <AdvanceCursor>
 58a:	08 95       	ret

0000058c <WriteString>:
 58c:	0f 93       	push	r16
 58e:	1f 93       	push	r17
 590:	cf 93       	push	r28
 592:	df 93       	push	r29
 594:	ec 01       	movw	r28, r24
 596:	88 81       	ld	r24, Y
 598:	88 23       	and	r24, r24
 59a:	39 f0       	breq	.+14     	; 0x5aa <WriteString+0x1e>
 59c:	8b 01       	movw	r16, r22
 59e:	21 96       	adiw	r28, 0x01	; 1
 5a0:	b8 01       	movw	r22, r16
 5a2:	e4 df       	rcall	.-56     	; 0x56c <WriteChar>
 5a4:	89 91       	ld	r24, Y+
 5a6:	81 11       	cpse	r24, r1
 5a8:	fb cf       	rjmp	.-10     	; 0x5a0 <WriteString+0x14>
 5aa:	df 91       	pop	r29
 5ac:	cf 91       	pop	r28
 5ae:	1f 91       	pop	r17
 5b0:	0f 91       	pop	r16
 5b2:	08 95       	ret

000005b4 <WriteInt>:
 5b4:	cf 93       	push	r28
 5b6:	df 93       	push	r29
 5b8:	cd b7       	in	r28, 0x3d	; 61
 5ba:	de b7       	in	r29, 0x3e	; 62
 5bc:	28 97       	sbiw	r28, 0x08	; 8
 5be:	0f b6       	in	r0, 0x3f	; 63
 5c0:	f8 94       	cli
 5c2:	de bf       	out	0x3e, r29	; 62
 5c4:	0f be       	out	0x3f, r0	; 63
 5c6:	cd bf       	out	0x3d, r28	; 61
 5c8:	4a e0       	ldi	r20, 0x0A	; 10
 5ca:	be 01       	movw	r22, r28
 5cc:	6f 5f       	subi	r22, 0xFF	; 255
 5ce:	7f 4f       	sbci	r23, 0xFF	; 255
 5d0:	ac d0       	rcall	.+344    	; 0x72a <__itoa_ncheck>
 5d2:	60 e0       	ldi	r22, 0x00	; 0
 5d4:	70 e0       	ldi	r23, 0x00	; 0
 5d6:	ce 01       	movw	r24, r28
 5d8:	01 96       	adiw	r24, 0x01	; 1
 5da:	d8 df       	rcall	.-80     	; 0x58c <WriteString>
 5dc:	28 96       	adiw	r28, 0x08	; 8
 5de:	0f b6       	in	r0, 0x3f	; 63
 5e0:	f8 94       	cli
 5e2:	de bf       	out	0x3e, r29	; 62
 5e4:	0f be       	out	0x3f, r0	; 63
 5e6:	cd bf       	out	0x3d, r28	; 61
 5e8:	df 91       	pop	r29
 5ea:	cf 91       	pop	r28
 5ec:	08 95       	ret

000005ee <ADC_init>:
#include "scheduler.h"
#include "SPI_LCD.c"


void ADC_init() {
	ADCSRA |= (1 << ADEN) | (1 << ADSC) | (1 << ADATE);
 5ee:	ea e7       	ldi	r30, 0x7A	; 122
 5f0:	f0 e0       	ldi	r31, 0x00	; 0
 5f2:	80 81       	ld	r24, Z
 5f4:	80 6e       	ori	r24, 0xE0	; 224
 5f6:	80 83       	st	Z, r24
 5f8:	08 95       	ret

000005fa <Tick>:
unsigned short readADC = 0x0000;
//unsigned short MAX = 0x0F7;
unsigned short MAX = 0x096;
unsigned char photoresistance = 000;

void Tick() {
 5fa:	cf 93       	push	r28
	switch (State) {
 5fc:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <State>
 600:	81 30       	cpi	r24, 0x01	; 1
 602:	51 f0       	breq	.+20     	; 0x618 <Tick+0x1e>
 604:	18 f0       	brcs	.+6      	; 0x60c <Tick+0x12>
 606:	82 30       	cpi	r24, 0x02	; 2
 608:	b1 f1       	breq	.+108    	; 0x676 <Tick+0x7c>
 60a:	64 c0       	rjmp	.+200    	; 0x6d4 <Tick+0xda>
		case Init:
		output = 0x00;
 60c:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <output>
		State = Read;
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <State>
		break;
 616:	5e c0       	rjmp	.+188    	; 0x6d4 <Tick+0xda>
		case Read:
		readADC = ADC;
 618:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 61c:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 620:	30 93 36 01 	sts	0x0136, r19	; 0x800136 <readADC+0x1>
 624:	20 93 35 01 	sts	0x0135, r18	; 0x800135 <readADC>
		photoresistance = readADC;
 628:	20 93 34 01 	sts	0x0134, r18	; 0x800134 <__data_end>
		if (readADC >= (MAX / 2)) {
 62c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <MAX>
 630:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <MAX+0x1>
 634:	96 95       	lsr	r25
 636:	87 95       	ror	r24
 638:	28 17       	cp	r18, r24
 63a:	39 07       	cpc	r19, r25
 63c:	20 f0       	brcs	.+8      	; 0x646 <Tick+0x4c>
			State = Display;
 63e:	82 e0       	ldi	r24, 0x02	; 2
 640:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <State>
 644:	47 c0       	rjmp	.+142    	; 0x6d4 <Tick+0xda>
		}
		else {
			State = Read;
 646:	c1 e0       	ldi	r28, 0x01	; 1
 648:	c0 93 3f 01 	sts	0x013F, r28	; 0x80013f <State>
			PORTC = 0x00;
 64c:	18 b8       	out	0x08, r1	; 8
// Total number of characters in landscape mode = 26x16 = 416.
byte curX,curY; // current x & y cursor position
void GotoXY (byte x,byte y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 64e:	c0 93 3d 01 	sts	0x013D, r28	; 0x80013d <curX>
 curY = y;
 652:	89 e0       	ldi	r24, 0x09	; 9
 654:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <curY>
			
			char *str = "It's dark outside   "; // text to display
			GotoXY(1,9); // position text cursor
			WriteString(str,BLACK); // display text 
 658:	60 e0       	ldi	r22, 0x00	; 0
 65a:	70 e0       	ldi	r23, 0x00	; 0
 65c:	86 e0       	ldi	r24, 0x06	; 6
 65e:	91 e0       	ldi	r25, 0x01	; 1
 660:	95 df       	rcall	.-214    	; 0x58c <WriteString>
// Total number of characters in landscape mode = 26x16 = 416.
byte curX,curY; // current x & y cursor position
void GotoXY (byte x,byte y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 662:	c0 93 3d 01 	sts	0x013D, r28	; 0x80013d <curX>
 curY = y;
 666:	8c e0       	ldi	r24, 0x0C	; 12
 668:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <curY>
			GotoXY(1,12);
			WriteInt(photoresistance);
 66c:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	a0 df       	rcall	.-192    	; 0x5b4 <WriteInt>
 674:	2f c0       	rjmp	.+94     	; 0x6d4 <Tick+0xda>
		}
		break;
		case Display:
		PORTC = 0xFF;
 676:	8f ef       	ldi	r24, 0xFF	; 255
 678:	88 b9       	out	0x08, r24	; 8
// Total number of characters in landscape mode = 26x16 = 416.
byte curX,curY; // current x & y cursor position
void GotoXY (byte x,byte y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 67a:	81 e0       	ldi	r24, 0x01	; 1
 67c:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <curX>
 curY = y;
 680:	89 e0       	ldi	r24, 0x09	; 9
 682:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <curY>
		
		char *str = "Wear your sunscreen!"; // text to display
		GotoXY(1,9); // position text cursor
		WriteString(str,BLACK); // display text 
 686:	60 e0       	ldi	r22, 0x00	; 0
 688:	70 e0       	ldi	r23, 0x00	; 0
 68a:	8b e1       	ldi	r24, 0x1B	; 27
 68c:	91 e0       	ldi	r25, 0x01	; 1
 68e:	7e df       	rcall	.-260    	; 0x58c <WriteString>
		if(photoresistance < 100){
 690:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 694:	84 36       	cpi	r24, 0x64	; 100
 696:	98 f4       	brcc	.+38     	; 0x6be <Tick+0xc4>
// Total number of characters in landscape mode = 26x16 = 416.
byte curX,curY; // current x & y cursor position
void GotoXY (byte x,byte y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 698:	91 e0       	ldi	r25, 0x01	; 1
 69a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <curX>
 curY = y;
 69e:	cc e0       	ldi	r28, 0x0C	; 12
 6a0:	c0 93 3e 01 	sts	0x013E, r28	; 0x80013e <curY>
			GotoXY(1,12);
		    WriteInt(photoresistance);
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	86 df       	rcall	.-244    	; 0x5b4 <WriteInt>
// Total number of characters in landscape mode = 26x16 = 416.
byte curX,curY; // current x & y cursor position
void GotoXY (byte x,byte y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 6a8:	83 e0       	ldi	r24, 0x03	; 3
 6aa:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <curX>
 curY = y;
 6ae:	c0 93 3e 01 	sts	0x013E, r28	; 0x80013e <curY>
			char *str2 = "0";
			GotoXY(3,12);
			WriteString(str2, WHITE);}
 6b2:	6f ef       	ldi	r22, 0xFF	; 255
 6b4:	7f ef       	ldi	r23, 0xFF	; 255
 6b6:	80 e3       	ldi	r24, 0x30	; 48
 6b8:	91 e0       	ldi	r25, 0x01	; 1
 6ba:	68 df       	rcall	.-304    	; 0x58c <WriteString>
 6bc:	08 c0       	rjmp	.+16     	; 0x6ce <Tick+0xd4>
// Total number of characters in landscape mode = 26x16 = 416.
byte curX,curY; // current x & y cursor position
void GotoXY (byte x,byte y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 6be:	91 e0       	ldi	r25, 0x01	; 1
 6c0:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <curX>
 curY = y;
 6c4:	9c e0       	ldi	r25, 0x0C	; 12
 6c6:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <curY>
		else{
			GotoXY(1,12);
			WriteInt(photoresistance);}
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	73 df       	rcall	.-282    	; 0x5b4 <WriteInt>
			
		State = Read;
 6ce:	81 e0       	ldi	r24, 0x01	; 1
 6d0:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <State>
		break;
	}
}
 6d4:	cf 91       	pop	r28
 6d6:	08 95       	ret

000006d8 <main>:

// ---------------------------------------------------------------------------
// MAIN PROGRAM
int main()
{
	 SetupPorts(); // use PortB for LCD interface
 6d8:	23 de       	rcall	.-954    	; 0x320 <SetupPorts>
	 //FlashLED(1); // indicate program start
	 OpenSPI(); // start communication to TFT
 6da:	38 de       	rcall	.-912    	; 0x34c <OpenSPI>
	 InitDisplay(); // initialize TFT controller
 6dc:	73 de       	rcall	.-794    	; 0x3c4 <InitDisplay>
 6de:	9c de       	rcall	.-712    	; 0x418 <ClearScreen>
	 //PortraitChars(); // show full screen of ASCII chars
	 //LineTest(); // paint background of lines
	 //FillEllipse(60,75,100,50,BLACK); // erase an oval in center
	 //Ellipse(60,75,100,50,LIME); // outline the oval in green
	 //SetOrientation(90);
	 ClearScreen();
 6e0:	0f ef       	ldi	r16, 0xFF	; 255
 6e2:	1f ef       	ldi	r17, 0xFF	; 255
	 FillRect(0, 0, XMAX, YMAX, WHITE);
 6e4:	2f e9       	ldi	r18, 0x9F	; 159
 6e6:	4f e7       	ldi	r20, 0x7F	; 127
 6e8:	60 e0       	ldi	r22, 0x00	; 0
 6ea:	80 e0       	ldi	r24, 0x00	; 0
 6ec:	a5 de       	rcall	.-694    	; 0x438 <FillRect>
 6ee:	8a e5       	ldi	r24, 0x5A	; 90
	 SetOrientation(90);
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	d2 de       	rcall	.-604    	; 0x498 <SetOrientation>
 6f4:	00 ee       	ldi	r16, 0xE0	; 224
 6f6:	1f ef       	ldi	r17, 0xFF	; 255
	 //GotoXY(4,9); // position text cursor
	 //WriteString(str,BLACK); // display text inside oval
	 //CloseSPI(); // close communication with TFT
	 //FlashLED(3); // indicate program end
	 
	 FillRect(1, 1, 20, 20, YELLOW);
 6f8:	24 e1       	ldi	r18, 0x14	; 20
 6fa:	44 e1       	ldi	r20, 0x14	; 20
 6fc:	61 e0       	ldi	r22, 0x01	; 1
 6fe:	81 e0       	ldi	r24, 0x01	; 1
 700:	9b de       	rcall	.-714    	; 0x438 <FillRect>
 702:	81 e0       	ldi	r24, 0x01	; 1
 704:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <curX>
// Total number of characters in landscape mode = 26x16 = 416.
byte curX,curY; // current x & y cursor position
void GotoXY (byte x,byte y)
// position cursor on character x,y grid, where 0<x<20, 0<y<19.
{
 curX = x;
 708:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <curY>
 curY = y;
 70c:	60 e0       	ldi	r22, 0x00	; 0
	 char *str3 = "A";
	 GotoXY(1, 1);
	 WriteString(str3, BLACK);
 70e:	70 e0       	ldi	r23, 0x00	; 0
 710:	82 e3       	ldi	r24, 0x32	; 50
 712:	91 e0       	ldi	r25, 0x01	; 1
 714:	3b df       	rcall	.-394    	; 0x58c <WriteString>
 716:	11 b8       	out	0x01, r1	; 1
	 
	DDRA = 0x00;
	PORTA = 0xFF;
 718:	8f ef       	ldi	r24, 0xFF	; 255
 71a:	82 b9       	out	0x02, r24	; 2
	
	DDRC = 0xFF;
 71c:	87 b9       	out	0x07, r24	; 7
	PORTC = 0x00;
 71e:	18 b8       	out	0x08, r1	; 8
	
	State = Init;
 720:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <State>
 
 ADC_init();
 724:	64 df       	rcall	.-312    	; 0x5ee <ADC_init>
 726:	69 df       	rcall	.-302    	; 0x5fa <Tick>
 while(1)
 {
	 Tick();
 728:	fe cf       	rjmp	.-4      	; 0x726 <main+0x4e>

0000072a <__itoa_ncheck>:
 72a:	bb 27       	eor	r27, r27
 72c:	4a 30       	cpi	r20, 0x0A	; 10
 72e:	31 f4       	brne	.+12     	; 0x73c <__itoa_ncheck+0x12>
 730:	99 23       	and	r25, r25
 732:	22 f4       	brpl	.+8      	; 0x73c <__itoa_ncheck+0x12>
 734:	bd e2       	ldi	r27, 0x2D	; 45
 736:	90 95       	com	r25
 738:	81 95       	neg	r24
 73a:	9f 4f       	sbci	r25, 0xFF	; 255
 73c:	01 c0       	rjmp	.+2      	; 0x740 <__utoa_common>

0000073e <__utoa_ncheck>:
 73e:	bb 27       	eor	r27, r27

00000740 <__utoa_common>:
 740:	fb 01       	movw	r30, r22
 742:	55 27       	eor	r21, r21
 744:	aa 27       	eor	r26, r26
 746:	88 0f       	add	r24, r24
 748:	99 1f       	adc	r25, r25
 74a:	aa 1f       	adc	r26, r26
 74c:	a4 17       	cp	r26, r20
 74e:	10 f0       	brcs	.+4      	; 0x754 <__utoa_common+0x14>
 750:	a4 1b       	sub	r26, r20
 752:	83 95       	inc	r24
 754:	50 51       	subi	r21, 0x10	; 16
 756:	b9 f7       	brne	.-18     	; 0x746 <__utoa_common+0x6>
 758:	a0 5d       	subi	r26, 0xD0	; 208
 75a:	aa 33       	cpi	r26, 0x3A	; 58
 75c:	08 f0       	brcs	.+2      	; 0x760 <__utoa_common+0x20>
 75e:	a9 5d       	subi	r26, 0xD9	; 217
 760:	a1 93       	st	Z+, r26
 762:	00 97       	sbiw	r24, 0x00	; 0
 764:	79 f7       	brne	.-34     	; 0x744 <__utoa_common+0x4>
 766:	b1 11       	cpse	r27, r1
 768:	b1 93       	st	Z+, r27
 76a:	11 92       	st	Z+, r1
 76c:	cb 01       	movw	r24, r22
 76e:	00 c0       	rjmp	.+0      	; 0x770 <strrev>

00000770 <strrev>:
 770:	dc 01       	movw	r26, r24
 772:	fc 01       	movw	r30, r24
 774:	67 2f       	mov	r22, r23
 776:	71 91       	ld	r23, Z+
 778:	77 23       	and	r23, r23
 77a:	e1 f7       	brne	.-8      	; 0x774 <strrev+0x4>
 77c:	32 97       	sbiw	r30, 0x02	; 2
 77e:	04 c0       	rjmp	.+8      	; 0x788 <strrev+0x18>
 780:	7c 91       	ld	r23, X
 782:	6d 93       	st	X+, r22
 784:	70 83       	st	Z, r23
 786:	62 91       	ld	r22, -Z
 788:	ae 17       	cp	r26, r30
 78a:	bf 07       	cpc	r27, r31
 78c:	c8 f3       	brcs	.-14     	; 0x780 <strrev+0x10>
 78e:	08 95       	ret

00000790 <_exit>:
 790:	f8 94       	cli

00000792 <__stop_program>:
 792:	ff cf       	rjmp	.-2      	; 0x792 <__stop_program>
